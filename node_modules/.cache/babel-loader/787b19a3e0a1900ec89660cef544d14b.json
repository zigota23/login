{"ast":null,"code":"import instanse from \".\";\nexport const productApi = {\n  createProduct: async payload => {\n    return await instanse.post(\"/products/create \", payload).then(respose => respose);\n  },\n  getProducts: async () => {\n    return await instanse.get(\"/products\").then(respose => respose);\n  },\n  getProductWithId: async payload => {\n    return await instanse.get(\"/products/:\" + payload.id).then(respose => respose);\n  },\n  updateProduct: async _ref => {\n    let {\n      id,\n      ...payload\n    } = _ref;\n    return await instanse.patch(`/products/:${id}/update`, payload);\n  },\n  deleteProducts: async payload => {\n    return await instanse.delete(`/products/:${payload.id}/delete`);\n  }\n};","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/services/product.js"],"names":["instanse","productApi","createProduct","payload","post","then","respose","getProducts","get","getProductWithId","id","updateProduct","patch","deleteProducts","delete"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,GAArB;AAEA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,aAAa,EAAE,MAAMC,OAAN,IAAiB;AAC9B,WAAO,MAAMH,QAAQ,CAACI,IAAT,CAAc,mBAAd,EAAmCD,OAAnC,EAA4CE,IAA5C,CAAkDC,OAAD,IAAaA,OAA9D,CAAb;AACD,GAHuB;AAKxBC,EAAAA,WAAW,EAAC,YAAW;AACrB,WAAO,MAAMP,QAAQ,CAACQ,GAAT,CAAa,WAAb,EAA0BH,IAA1B,CAAgCC,OAAD,IAAaA,OAA5C,CAAb;AACD,GAPuB;AASxBG,EAAAA,gBAAgB,EAAC,MAAMN,OAAN,IAAiB;AAChC,WAAO,MAAMH,QAAQ,CAACQ,GAAT,CAAa,gBAAgBL,OAAO,CAACO,EAArC,EAAyCL,IAAzC,CAA+CC,OAAD,IAAaA,OAA3D,CAAb;AACD,GAXuB;AAaxBK,EAAAA,aAAa,EAAE,cAA4B;AAAA,QAAtB;AAAED,MAAAA,EAAF;AAAM,SAAGP;AAAT,KAAsB;AACzC,WAAO,MAAMH,QAAQ,CAACY,KAAT,CAAgB,cAAaF,EAAG,SAAhC,EAA0CP,OAA1C,CAAb;AACD,GAfuB;AAiBxBU,EAAAA,cAAc,EAAE,MAAMV,OAAN,IAAiB;AAC/B,WAAO,MAAMH,QAAQ,CAACc,MAAT,CAAiB,cAAaX,OAAO,CAACO,EAAG,SAAzC,CAAb;AACD;AAnBuB,CAAnB","sourcesContent":["import instanse from \".\";\n\nexport const productApi = {\n  createProduct: async(payload) =>{\n    return await instanse.post(\"/products/create \", payload).then((respose) => respose)\n  },\n\n  getProducts:async() => {\n    return await instanse.get(\"/products\").then((respose) => respose)\n  },\n\n  getProductWithId:async(payload) =>{\n    return await instanse.get(\"/products/:\" + payload.id).then((respose) => respose)\n  },\n\n  updateProduct: async({ id, ...payload }) =>{\n    return await instanse.patch(`/products/:${id}/update`, payload)\n  },\n\n  deleteProducts: async(payload) =>{\n    return await instanse.delete(`/products/:${payload.id}/delete`)\n  },\n};\n"]},"metadata":{},"sourceType":"module"}