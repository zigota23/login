{"ast":null,"code":"import { takeEvery, put } from \"@redux-saga/core/effects\";\nimport { productApi } from \"../../../../API\";\n\nasync function getProds(token) {\n  return await productApi.getProducts(token);\n}\n\nfunction* workerSaga(_ref) {\n  let {\n    token\n  } = _ref;\n  const data = yield getProds(token);\n  const arrProd = data.data.map(_ref2 => {\n    let {\n      name,\n      manufacturer,\n      calories,\n      rating,\n      description,\n      category,\n      amount\n    } = _ref2;\n    return {\n      name,\n      manufacturer,\n      calories,\n      rating,\n      description,\n      category,\n      amount\n    };\n  });\n\n  if (data.status === 200) {\n    yield put({\n      type: 'SET_PRODUCTS',\n      data: arrProd\n    });\n  }\n}\n\nexport default function* getProductsSaga() {\n  yield takeEvery('GET_PRODUCTS', workerSaga);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/redux/sagas/products/getProducts/index.js"],"names":["takeEvery","put","productApi","getProds","token","getProducts","workerSaga","data","arrProd","map","name","manufacturer","calories","rating","description","category","amount","status","type","getProductsSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,QAA8B,0BAA9B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAGA,eAAeC,QAAf,CAAwBC,KAAxB,EAA8B;AAC5B,SAAO,MAAMF,UAAU,CAACG,WAAX,CAAuBD,KAAvB,CAAb;AACD;;AAED,UAAUE,UAAV,OAA6B;AAAA,MAAR;AAACF,IAAAA;AAAD,GAAQ;AAC3B,QAAMG,IAAI,GAAG,MAAMJ,QAAQ,CAACC,KAAD,CAA3B;AACC,QAAMI,OAAO,GAAGD,IAAI,CAACA,IAAL,CAAUE,GAAV,CAAc,SAAmE;AAAA,QAAlE;AAACC,MAAAA,IAAD;AAAMC,MAAAA,YAAN;AAAmBC,MAAAA,QAAnB;AAA4BC,MAAAA,MAA5B;AAAmCC,MAAAA,WAAnC;AAA+CC,MAAAA,QAA/C;AAAwDC,MAAAA;AAAxD,KAAkE;AAChG,WAAM;AAACN,MAAAA,IAAD;AAAMC,MAAAA,YAAN;AAAmBC,MAAAA,QAAnB;AAA4BC,MAAAA,MAA5B;AAAmCC,MAAAA,WAAnC;AAA+CC,MAAAA,QAA/C;AAAwDC,MAAAA;AAAxD,KAAN;AACD,GAFgB,CAAhB;;AAGD,MAAGT,IAAI,CAACU,MAAL,KAAgB,GAAnB,EAAuB;AACrB,UAAMhB,GAAG,CAAC;AAACiB,MAAAA,IAAI,EAAC,cAAN;AAAqBX,MAAAA,IAAI,EAACC;AAA1B,KAAD,CAAT;AACD;AACF;;AAED,eAAe,UAAUW,eAAV,GAA2B;AACxC,QAAMnB,SAAS,CAAC,cAAD,EAAgBM,UAAhB,CAAf;AACD","sourcesContent":["import { takeEvery ,put} from \"@redux-saga/core/effects\";\nimport { productApi } from \"../../../../API\";\n\n\nasync function getProds(token){\n  return await productApi.getProducts(token)\n}\n\nfunction* workerSaga({token}){\n  const data = yield getProds(token)\n   const arrProd = data.data.map(({name,manufacturer,calories,rating,description,category,amount})=>{\n    return{name,manufacturer,calories,rating,description,category,amount}\n  })\n  if(data.status === 200){\n    yield put({type:'SET_PRODUCTS',data:arrProd})\n  }\n}\n\nexport default function* getProductsSaga(){\n  yield takeEvery('GET_PRODUCTS',workerSaga)\n}"]},"metadata":{},"sourceType":"module"}