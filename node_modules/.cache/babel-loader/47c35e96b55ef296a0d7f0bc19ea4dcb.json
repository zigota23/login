{"ast":null,"code":"import { takeLatest, put, call, all } from \"@redux-saga/core/effects\";\nimport { DELETEUSER, GETUSER, LOGIN, LOGOUT, RENEWTOKEN, SETDATAUSER, SIGNUP, USERUPDATE } from \"../actionTypes/user\";\nimport { userApi } from \"../services/user\";\n/* Worker */\n\nfunction* userDelete(action) {\n  try {\n    const data = yield call(userApi.userDelete);\n\n    if (data.status === 200) {\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          token: '',\n          firstName: '',\n          lastName: '',\n          email: ''\n        }\n      });\n      action.payload.navigate('/login');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* getUser() {\n  try {\n    const data = yield call(userApi.getMe());\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* loginUser(action) {\n  try {\n    const {\n      email,\n      password,\n      checkbox\n    } = action.payload;\n    const data = yield call(userApi.login, {\n      email,\n      password\n    });\n\n    if (data.status === 200) {\n      const {\n        accessToken: token,\n        firstName,\n        lastName,\n        email\n      } = data.data.user;\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          token,\n          firstName,\n          lastName,\n          email\n        }\n      });\n      if (checkbox) localStorage.setItem('token', token);\n      action.payload.navigate('/');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* logoutUser(action) {\n  try {\n    const data = yield call(userApi.logout);\n\n    if (data.status === 200) {\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          token: '',\n          firstName: '',\n          lastName: ''\n        }\n      });\n      localStorage.removeItem('token');\n      action.payload.navigate('/login');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* renewToken(action) {\n  try {\n    const data = yield call(userApi.renewToken);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* singUpUser(action) {\n  try {\n    const {\n      firstName,\n      lastName,\n      email,\n      password\n    } = action.payload;\n    const data = yield call(userApi.signup, {\n      firstName,\n      lastName,\n      email,\n      password\n    });\n\n    if (data.status === 201) {\n      const {\n        accessToken: token,\n        firstName,\n        lastName,\n        email\n      } = data.data.user;\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          token,\n          firstName,\n          lastName,\n          email\n        }\n      });\n      action.payload.navigate('/');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* userUpdate(action) {\n  try {\n    const {\n      firstName,\n      lastName,\n      email\n    } = action.payload;\n    const data = yield call(userApi.userUpdate, {\n      firstName,\n      lastName,\n      email\n    });\n\n    if (data.status === 200) {\n      const {\n        firstName,\n        lastName,\n        email\n      } = data.data.updatedUser;\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          firstName,\n          lastName,\n          email\n        }\n      });\n      action.payload.navigate('/profile');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n/* Watchers */\n\n\nfunction* watchDeleteUserSaga() {\n  yield takeLatest(DELETEUSER, userDelete);\n}\n\nfunction* watchGetUserSaga() {\n  yield takeLatest(GETUSER, getUser);\n}\n\nfunction* watchUpdateUserSaga() {\n  yield takeLatest(USERUPDATE, userUpdate);\n}\n\nfunction* watchSignUpSaga() {\n  yield takeLatest(SIGNUP, singUpUser);\n}\n\nfunction* watchRenewTokenSaga() {\n  yield takeLatest(RENEWTOKEN, renewToken);\n}\n\nfunction* watchLogoutSaga() {\n  yield takeLatest(LOGOUT, logoutUser);\n}\n\nfunction* watchLoginSaga() {\n  yield takeLatest(LOGIN, loginUser);\n}\n\nexport default function* userSaga() {\n  yield all([watchDeleteUserSaga(), watchGetUserSaga(), watchUpdateUserSaga(), watchSignUpSaga(), watchRenewTokenSaga(), watchLogoutSaga(), watchLoginSaga()]);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/sagas/user.js"],"names":["takeLatest","put","call","all","DELETEUSER","GETUSER","LOGIN","LOGOUT","RENEWTOKEN","SETDATAUSER","SIGNUP","USERUPDATE","userApi","userDelete","action","data","status","type","token","firstName","lastName","email","payload","navigate","error","console","log","getUser","getMe","loginUser","password","checkbox","login","accessToken","user","localStorage","setItem","logoutUser","logout","removeItem","renewToken","singUpUser","signup","userUpdate","updatedUser","watchDeleteUserSaga","watchGetUserSaga","watchUpdateUserSaga","watchSignUpSaga","watchRenewTokenSaga","watchLogoutSaga","watchLoginSaga","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest,put,call,all} from \"@redux-saga/core/effects\"\nimport { DELETEUSER, GETUSER, LOGIN, LOGOUT, RENEWTOKEN, SETDATAUSER, SIGNUP, USERUPDATE } from \"../actionTypes/user\"\nimport { userApi } from \"../services/user\"\n\n\n/* Worker */\n\nfunction* userDelete(action){\n  try{\n    const data = yield call(userApi.userDelete)\n    if(data.status === 200){\n      yield put({type:SETDATAUSER,data:{token:'',firstName:'',lastName:'',email:''}})\n      action.payload.navigate('/login')\n    }\n  }\n  catch(error){\n    console.log(error)\n  }\n\n}\n\nfunction* getUser(){\n  try{\n    const data = yield call(userApi.getMe())\n  }\n  catch(error){\n    console.log(error)\n  }\n  \n}\n\n\nfunction* loginUser(action){\n  try{\n      const {email,password,checkbox} = action.payload\n      const data = yield call(userApi.login,{email,password})\n      if(data.status === 200){\n        const {accessToken:token,firstName,lastName,email}=data.data.user\n        yield put({type:SETDATAUSER,data:{token,firstName,lastName,email}})\n        if(checkbox)localStorage.setItem('token',token)\n        action.payload.navigate('/')\n      }\n  }\n  catch(error){\n    console.log(error)\n  }\n  \n}\n\n\nfunction* logoutUser(action){\n  try{\n    const data = yield call(userApi.logout)\n    if(data.status === 200){\n      yield put({type:SETDATAUSER,data:{token:'',firstName:'',lastName:''}})\n      localStorage.removeItem('token')\n      action.payload.navigate('/login')\n    }\n  }\n  catch(error){\n    console.log(error)\n  }\n\n}\n\nfunction* renewToken(action){\n  try{\n    const data = yield call(userApi.renewToken)\n  }\n  catch(error){\n    console.log(error)\n  }\n\n}\n\n\nfunction* singUpUser(action){\n  try{\n    const {firstName,lastName,email,password} = action.payload\n    const data = yield call(userApi.signup,{firstName,lastName,email,password})\n    if(data.status === 201){\n      const {accessToken:token,firstName,lastName,email}=data.data.user\n      yield put({type:SETDATAUSER,data:{token,firstName,lastName,email}})\n      action.payload.navigate('/')\n    }\n  }\n  catch(error){\n    console.log(error)\n  }\n\n} \n\n\nfunction* userUpdate(action){\n  try{\n    const {firstName,lastName,email} =action.payload\n    const data = yield call(userApi.userUpdate,{firstName,lastName,email})\n    if(data.status === 200){\n      const {firstName,lastName,email}=data.data.updatedUser\n      yield put({type:SETDATAUSER,data:{firstName,lastName,email}})\n      action.payload.navigate('/profile')\n    }\n  }\n  catch(error){\n    console.log(error)\n  }\n\n}\n\n\n\n/* Watchers */\n\nfunction* watchDeleteUserSaga(){\n  yield takeLatest(DELETEUSER,userDelete)\n}\n\nfunction* watchGetUserSaga(){\n  yield takeLatest(GETUSER,getUser)\n}\n\nfunction* watchUpdateUserSaga(){\n  yield takeLatest(USERUPDATE,userUpdate)\n}\n\nfunction* watchSignUpSaga(){\n  yield takeLatest(SIGNUP,singUpUser)\n}\nfunction* watchRenewTokenSaga(){\n  yield takeLatest(RENEWTOKEN,renewToken)\n}\n\nfunction* watchLogoutSaga(){\n  yield takeLatest(LOGOUT,logoutUser)\n}\n\nfunction* watchLoginSaga(){\n  \n  yield takeLatest(LOGIN,loginUser)\n}\n\nexport default function* userSaga(){\n  yield all([\n    watchDeleteUserSaga(),\n    watchGetUserSaga(),\n    watchUpdateUserSaga(),\n    watchSignUpSaga(),\n    watchRenewTokenSaga(),\n    watchLogoutSaga(),\n    watchLoginSaga()\n  ])\n}"]},"metadata":{},"sourceType":"module"}