{"ast":null,"code":"import { takeLatest, put, call, all } from \"@redux-saga/core/effects\";\nimport { userApi } from \"../services/user\";\n/* Worker */\n\nfunction* userDelete(action) {\n  const {\n    token\n  } = action.payload;\n  const data = yield call(userApi.userDelete, {\n    token\n  });\n\n  if (data.status === 200) {\n    yield put({\n      type: 'SET_DATA_USER',\n      data: {\n        token: '',\n        firstName: '',\n        lastName: '',\n        email: ''\n      }\n    });\n  }\n}\n\nfunction* getUser() {\n  const data = yield call(userApi.getMe());\n}\n\nfunction* loginUser(action) {\n  const {\n    email,\n    password\n  } = action.payload;\n  const data = yield call(userApi.login, {\n    email,\n    password\n  });\n\n  if (data.status === 200) {\n    yield put({\n      type: 'SET_DATA_USER',\n      data: {\n        token: data.data.user.accessToken,\n        firstName: data.data.user.firstName,\n        lastName: data.data.user.lastName,\n        email: data.data.user.email\n      }\n    });\n  }\n}\n\nfunction* logoutUser(action) {\n  const {\n    token\n  } = action.payload;\n  const data = yield call(userApi.logout, {\n    token\n  });\n\n  if (data.status === 200) {\n    yield put({\n      type: 'SET_DATA_USER',\n      data: {\n        token: '',\n        firstName: '',\n        lastName: ''\n      }\n    });\n  }\n}\n\nfunction* renewToken(action) {\n  const {\n    token\n  } = action.payload;\n  const data = yield call(userApi.renewToken, {\n    token\n  });\n}\n\nfunction* singUpUser(action) {\n  const {\n    firstName,\n    lastName,\n    email,\n    password\n  } = action.payload;\n  const data = yield call(userApi.signup, {\n    firstName,\n    lastName,\n    email,\n    password\n  });\n\n  if (data.status === 201) {\n    yield put({\n      type: 'SET_DATA_USER',\n      data: {\n        token: data.data.user.accessToken,\n        firstName: data.data.user.firstName,\n        lastName: data.data.user.lastName,\n        email: data.data.user.email\n      }\n    });\n  }\n}\n\nfunction* userUpdate(action) {\n  const {\n    firstName,\n    lastName,\n    email,\n    token\n  } = action.payload;\n  const data = yield call(userApi.userUpdate, {\n    firstName,\n    lastName,\n    email,\n    token\n  });\n\n  if (data.status === 200) {\n    yield put({\n      type: 'SET_DATA_USER',\n      data: {\n        firstName: data.data.updatedUser.firstName,\n        lastName: data.data.updatedUser.lastName,\n        email: data.data.updatedUser.email\n      }\n    });\n  }\n}\n/* Watchers */\n\n\nfunction* watchDeleteUserSaga() {\n  yield takeLatest(\"DELETEUSER\", userDelete);\n}\n\nfunction* watchGetUserSaga() {\n  yield takeLatest('GETUSER', getUser);\n}\n\nfunction* watchUpdateUserSaga() {\n  yield takeLatest('USERUPDATE', userUpdate);\n}\n\nfunction* watchSignUpSaga() {\n  yield takeLatest('SIGNUP', singUpUser);\n}\n\nfunction* watchRenewTokenSaga() {\n  yield takeLatest('RENEWTOKEN', renewToken);\n}\n\nfunction* watchLogoutSaga() {\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nfunction* watchLoginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n}\n\nexport default function* userSaga() {\n  yield all([watchDeleteUserSaga, watchGetUserSaga, watchUpdateUserSaga, watchSignUpSaga, watchRenewTokenSaga, watchLogoutSaga, watchLoginSaga]);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/sagas/user.js"],"names":["takeLatest","put","call","all","userApi","userDelete","action","token","payload","data","status","type","firstName","lastName","email","getUser","getMe","loginUser","password","login","user","accessToken","logoutUser","logout","renewToken","singUpUser","signup","userUpdate","updatedUser","watchDeleteUserSaga","watchGetUserSaga","watchUpdateUserSaga","watchSignUpSaga","watchRenewTokenSaga","watchLogoutSaga","watchLoginSaga","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest,put,call,all } from \"@redux-saga/core/effects\"\nimport { userApi } from \"../services/user\"\n\n\n/* Worker */\n\nfunction* userDelete(action){\n  const {token} = action.payload\n  const data = yield call(userApi.userDelete,{token})\n  if(data.status === 200){\n    yield put({type:'SET_DATA_USER',data:{token:'',firstName:'',lastName:'',email:''}})\n  }\n}\n\nfunction* getUser(){\n  const data = yield call(userApi.getMe())\n}\n\n\nfunction* loginUser(action){\n  const {email,password} = action.payload\n  const data = yield call(userApi.login,{email,password})\n  if(data.status === 200){\n    yield put({type:'SET_DATA_USER',data:{token:data.data.user.accessToken,firstName:data.data.user.firstName,lastName:data.data.user.lastName,email:data.data.user.email}})\n  }\n}\n\n\nfunction* logoutUser(action){\n  const {token} = action.payload\n  const data = yield call(userApi.logout,{token})\n  if(data.status === 200){\n    yield put({type:'SET_DATA_USER',data:{token:'',firstName:'',lastName:''}})\n  }\n}\n\nfunction* renewToken(action){\n  const {token} = action.payload\n  const data = yield call(userApi.renewToken,{token})\n}\n\n\nfunction* singUpUser(action){\n  const {firstName,lastName,email,password} = action.payload\n  const data = yield call(userApi.signup,{firstName,lastName,email,password})\n  if(data.status === 201){\n    yield put({type:'SET_DATA_USER',data:{token:data.data.user.accessToken,firstName:data.data.user.firstName,lastName:data.data.user.lastName,email:data.data.user.email}})\n  }\n} \n\n\nfunction* userUpdate(action){\n  const {firstName,lastName,email,token} =action.payload\n  const data = yield call(userApi.userUpdate,{firstName,lastName,email,token})\n  if(data.status === 200){\n    yield put({type:'SET_DATA_USER',data:{firstName:data.data.updatedUser.firstName,lastName:data.data.updatedUser.lastName,email:data.data.updatedUser.email}})\n  }\n}\n\n\n\n/* Watchers */\n\nfunction* watchDeleteUserSaga(){\n  yield takeLatest(\"DELETEUSER\",userDelete)\n}\n\nfunction* watchGetUserSaga(){\n  yield takeLatest('GETUSER',getUser)\n}\n\nfunction* watchUpdateUserSaga(){\n  yield takeLatest('USERUPDATE',userUpdate)\n}\n\nfunction* watchSignUpSaga(){\n  yield takeLatest('SIGNUP',singUpUser)\n}\nfunction* watchRenewTokenSaga(){\n  yield takeLatest('RENEWTOKEN',renewToken)\n}\n\nfunction* watchLogoutSaga(){\n  yield takeLatest('LOGOUT',logoutUser)\n}\n\nfunction* watchLoginSaga(){\n  yield takeLatest('LOGIN',loginUser)\n}\n\nexport default function* userSaga(){\n  yield all([\n    watchDeleteUserSaga,\n    watchGetUserSaga,\n    watchUpdateUserSaga,\n    watchSignUpSaga,\n    watchRenewTokenSaga,\n    watchLogoutSaga,\n    watchLoginSaga\n  ])\n}"]},"metadata":{},"sourceType":"module"}