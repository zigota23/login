{"ast":null,"code":"import { takeLatest, put, call, all, takeEvery } from \"@redux-saga/core/effects\";\nimport { DELETEUSER, GETUSER, LOGIN, LOGOUT, RENEWTOKEN, SETDATAUSER, SIGNUP, USERUPDATE } from \"../actionTypes/user\";\nimport { userApi } from \"../services/user\";\n/* Worker */\n\nfunction* userDelete(action) {\n  const {\n    token\n  } = action.payload;\n  const data = yield call(userApi.userDelete, {\n    token\n  });\n\n  if (data.status === 200) {\n    yield put({\n      type: SETDATAUSER,\n      data: {\n        token: '',\n        firstName: '',\n        lastName: '',\n        email: ''\n      }\n    });\n  }\n}\n\nfunction* getUser() {\n  const data = yield call(userApi.getMe());\n}\n\nfunction* loginUser(action) {\n  const {\n    email,\n    password\n  } = action.payload;\n  const data = yield call(userApi.login, {\n    email,\n    password\n  });\n\n  if (data.status === 200) {\n    yield put({\n      type: SETDATAUSER,\n      data: {\n        token: data.data.user.accessToken,\n        firstName: data.data.user.firstName,\n        lastName: data.data.user.lastName,\n        email: data.data.user.email\n      }\n    });\n  }\n}\n\nfunction* logoutUser(action) {\n  const {\n    token\n  } = action.payload;\n  const data = yield call(userApi.logout, {\n    token\n  });\n\n  if (data.status === 200) {\n    yield put({\n      type: SETDATAUSER,\n      data: {\n        token: '',\n        firstName: '',\n        lastName: ''\n      }\n    });\n  }\n}\n\nfunction* renewToken(action) {\n  const {\n    token\n  } = action.payload;\n  const data = yield call(userApi.renewToken, {\n    token\n  });\n}\n\nfunction* singUpUser(action) {\n  const {\n    firstName,\n    lastName,\n    email,\n    password\n  } = action.payload;\n  const data = yield call(userApi.signup, {\n    firstName,\n    lastName,\n    email,\n    password\n  });\n\n  if (data.status === 201) {\n    yield put({\n      type: SETDATAUSER,\n      data: {\n        token: data.data.user.accessToken,\n        firstName: data.data.user.firstName,\n        lastName: data.data.user.lastName,\n        email: data.data.user.email\n      }\n    });\n  }\n}\n\nfunction* userUpdate(action) {\n  const {\n    firstName,\n    lastName,\n    email,\n    token\n  } = action.payload;\n  const data = yield call(userApi.userUpdate, {\n    firstName,\n    lastName,\n    email,\n    token\n  });\n\n  if (data.status === 200) {\n    yield put({\n      type: SETDATAUSER,\n      data: {\n        firstName: data.data.updatedUser.firstName,\n        lastName: data.data.updatedUser.lastName,\n        email: data.data.updatedUser.email\n      }\n    });\n  }\n}\n/* Watchers */\n\n\nfunction* watchDeleteUserSaga() {\n  yield takeLatest(DELETEUSER, userDelete);\n}\n\nfunction* watchGetUserSaga() {\n  yield takeLatest(GETUSER, getUser);\n}\n\nfunction* watchUpdateUserSaga() {\n  yield takeLatest(USERUPDATE, userUpdate);\n}\n\nfunction* watchSignUpSaga() {\n  yield takeLatest(SIGNUP, singUpUser);\n}\n\nfunction* watchRenewTokenSaga() {\n  yield takeLatest(RENEWTOKEN, renewToken);\n}\n\nfunction* watchLogoutSaga() {\n  yield takeLatest(LOGOUT, logoutUser);\n}\n\nfunction* watchLoginSaga() {\n  yield takeEvery(LOGIN, loginUser);\n}\n\nexport default function* userSaga() {\n  yield all([watchDeleteUserSaga(), watchGetUserSaga(), watchUpdateUserSaga(), watchSignUpSaga(), watchRenewTokenSaga(), watchLogoutSaga(), watchLoginSaga()]);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/sagas/user.js"],"names":["takeLatest","put","call","all","takeEvery","DELETEUSER","GETUSER","LOGIN","LOGOUT","RENEWTOKEN","SETDATAUSER","SIGNUP","USERUPDATE","userApi","userDelete","action","token","payload","data","status","type","firstName","lastName","email","getUser","getMe","loginUser","password","login","user","accessToken","logoutUser","logout","renewToken","singUpUser","signup","userUpdate","updatedUser","watchDeleteUserSaga","watchGetUserSaga","watchUpdateUserSaga","watchSignUpSaga","watchRenewTokenSaga","watchLogoutSaga","watchLoginSaga","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest,put,call,all,takeEvery } from \"@redux-saga/core/effects\"\nimport { DELETEUSER, GETUSER, LOGIN, LOGOUT, RENEWTOKEN, SETDATAUSER, SIGNUP, USERUPDATE } from \"../actionTypes/user\"\nimport { userApi } from \"../services/user\"\n\n\n/* Worker */\n\nfunction* userDelete(action){\n  const {token} = action.payload\n  const data = yield call(userApi.userDelete,{token})\n  if(data.status === 200){\n    yield put({type:SETDATAUSER,data:{token:'',firstName:'',lastName:'',email:''}})\n  }\n}\n\nfunction* getUser(){\n  const data = yield call(userApi.getMe())\n}\n\n\nfunction* loginUser(action){\n  const {email,password} = action.payload\n  const data = yield call(userApi.login,{email,password})\n  if(data.status === 200){\n    yield put({type:SETDATAUSER,data:{token:data.data.user.accessToken,firstName:data.data.user.firstName,lastName:data.data.user.lastName,email:data.data.user.email}})\n  }\n}\n\n\nfunction* logoutUser(action){\n  const {token} = action.payload\n  const data = yield call(userApi.logout,{token})\n  if(data.status === 200){\n    yield put({type:SETDATAUSER,data:{token:'',firstName:'',lastName:''}})\n  }\n}\n\nfunction* renewToken(action){\n  const {token} = action.payload\n  const data = yield call(userApi.renewToken,{token})\n}\n\n\nfunction* singUpUser(action){\n  const {firstName,lastName,email,password} = action.payload\n  const data = yield call(userApi.signup,{firstName,lastName,email,password})\n  if(data.status === 201){\n    yield put({type:SETDATAUSER,data:{token:data.data.user.accessToken,firstName:data.data.user.firstName,lastName:data.data.user.lastName,email:data.data.user.email}})\n  }\n} \n\n\nfunction* userUpdate(action){\n  const {firstName,lastName,email,token} =action.payload\n  const data = yield call(userApi.userUpdate,{firstName,lastName,email,token})\n  if(data.status === 200){\n    yield put({type:SETDATAUSER,data:{firstName:data.data.updatedUser.firstName,lastName:data.data.updatedUser.lastName,email:data.data.updatedUser.email}})\n  }\n}\n\n\n\n/* Watchers */\n\nfunction* watchDeleteUserSaga(){\n  yield takeLatest(DELETEUSER,userDelete)\n}\n\nfunction* watchGetUserSaga(){\n  yield takeLatest(GETUSER,getUser)\n}\n\nfunction* watchUpdateUserSaga(){\n  yield takeLatest(USERUPDATE,userUpdate)\n}\n\nfunction* watchSignUpSaga(){\n  yield takeLatest(SIGNUP,singUpUser)\n}\nfunction* watchRenewTokenSaga(){\n  yield takeLatest(RENEWTOKEN,renewToken)\n}\n\nfunction* watchLogoutSaga(){\n  yield takeLatest(LOGOUT,logoutUser)\n}\n\nfunction* watchLoginSaga(){\n  \n  yield takeEvery(LOGIN,loginUser)\n}\n\nexport default function* userSaga(){\n  yield all([\n    watchDeleteUserSaga(),\n    watchGetUserSaga(),\n    watchUpdateUserSaga(),\n    watchSignUpSaga(),\n    watchRenewTokenSaga(),\n    watchLogoutSaga(),\n    watchLoginSaga()\n  ])\n}"]},"metadata":{},"sourceType":"module"}