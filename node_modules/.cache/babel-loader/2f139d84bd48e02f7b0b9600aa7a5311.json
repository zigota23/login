{"ast":null,"code":"var _jsxFileName = \"/home/dev/Max/test/login/src/components/form/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { validateEmail } from \"../../validate\";\nimport { Button } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport Input from \"../Input\";\nimport { useStyles } from \"./style\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyForm = props => {\n  _s();\n\n  const s = useStyles();\n  const navigate = useNavigate();\n  const formik = useFo;\n\n  const items = (values, errors, touched, handleChange, handleBlur) => props.formItem.map((item, index) => {\n    switch (item.element) {\n      case \"Input\":\n        {\n          const {\n            type,\n            name,\n            placeholder,\n            sx\n          } = item.propsItem;\n          return /*#__PURE__*/_jsxDEV(Input, {\n            type: type,\n            name: name,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values[name],\n            errors: errors[name],\n            touched: touched[name],\n            placeholder: placeholder,\n            sx: sx\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this);\n        }\n\n      default:\n        return null;\n    }\n  });\n\n  const btnText = {\n    signin: \"Sign In\",\n    signup: \"Sign Up\",\n    changeProfile: \"Save\"\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.initialValues,\n    validate: validateEmail,\n    onSubmit: props.onSubmit,\n    children: _ref => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [items(values, errors, touched, handleChange, handleBlur, isSubmitting), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.blockSubmit,\n          children: [props.typeForm == \"signin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.staySing,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"checkbox\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.checkbox,\n              errors: errors.checkbox,\n              touched: touched.checkbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), \"Stay signed in?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.blockButton,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: isSubmitting,\n              variant: \"contained\",\n              children: btnText[props.typeForm]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), props.typeForm == \"signin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.createProfile,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              navigate(\"/signup\");\n            },\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyForm, \"WdIPXw8S3mIXYwYxSNY8dQJ+fVE=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = MyForm;\nexport default MyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"sources":["/home/dev/Max/test/login/src/components/form/index.jsx"],"names":["React","validateEmail","Button","Formik","Input","useStyles","useNavigate","MyForm","props","s","navigate","formik","useFo","items","values","errors","touched","handleChange","handleBlur","formItem","map","item","index","element","type","name","placeholder","sx","propsItem","btnText","signin","signup","changeProfile","initialValues","onSubmit","handleSubmit","isSubmitting","blockSubmit","typeForm","staySing","checkbox","blockButton","createProfile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { validateEmail } from \"../../validate\";\nimport { Button } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport Input from \"../Input\";\nimport { useStyles } from \"./style\";\nimport { useNavigate } from \"react-router\";\n\nconst MyForm = (props) => {\n  const s = useStyles();\n  const navigate = useNavigate();\n  const formik = useFo\n\n  const items = (values, errors, touched, handleChange, handleBlur) =>\n    props.formItem.map((item, index) => {\n      switch (item.element) {\n        case \"Input\": {\n          const { type, name, placeholder, sx } = item.propsItem;\n          return (\n            <Input\n              type={type}\n              name={name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values[name]}\n              errors={errors[name]}\n              touched={touched[name]}\n              placeholder={placeholder}\n              sx={sx}\n              key={index}\n            />\n          );\n        }\n\n        default:\n          return null;\n      }\n    });\n\n  const btnText = {\n    signin: \"Sign In\",\n    signup: \"Sign Up\",\n    changeProfile: \"Save\"\n  };\n\n  return (\n    <Formik\n      initialValues={props.initialValues}\n      validate={validateEmail}\n      onSubmit={props.onSubmit}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          {items(\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            isSubmitting\n          )}\n          <div className={s.blockSubmit}>\n            {props.typeForm == \"signin\" &&\n              <div className={s.staySing}>\n                <input\n                  type=\"checkbox\"\n                  name=\"checkbox\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.checkbox}\n                  errors={errors.checkbox}\n                  touched={touched.checkbox}\n                />\n                Stay signed in?\n              </div>\n            }\n            <div className={s.blockButton}>\n              <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\">\n                {btnText[props.typeForm]}\n              </Button>\n            </div>\n          </div>\n          {props.typeForm == \"signin\" &&\n            <div className={s.createProfile}>\n              <Button\n                onClick={() => {\n                  navigate(\"/signup\");\n                }}\n              >\n                Create an account\n              </Button>\n            </div>\n          }\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default MyForm;\n"]},"metadata":{},"sourceType":"module"}