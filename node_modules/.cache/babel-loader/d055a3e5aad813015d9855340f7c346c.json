{"ast":null,"code":"import { takeLatest, put, call, all } from \"@redux-saga/core/effects\";\nimport { DELETEUSER, GETUSER, LOGIN, LOGOUT, RENEWTOKEN, SETDATAUSER, SIGNUP, USERUPDATE } from \"../actionTypes/user\";\nimport { userApi } from \"../services/user\";\n/* Worker */\n\nfunction* userDelete(action) {\n  try {\n    const data = yield call(userApi.userDelete);\n\n    if (data.status === 200) {\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          token: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\"\n        }\n      });\n      action.payload.navigate(\"/login\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* getUser() {\n  try {// const data = yield call(userApi.getMe())\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* loginUser(action) {\n  try {\n    const {\n      email,\n      password,\n      checkbox\n    } = action.payload;\n    const data = yield call(userApi.login, {\n      email,\n      password\n    });\n\n    if (data.status === 200) {\n      const {\n        accessToken: token,\n        firstName,\n        lastName,\n        email\n      } = data.data.user; // yield put({\n      //   type: SETDATAUSER,\n      //   data: { token, firstName, lastName, email },\n      // });\n\n      if (checkbox) localStorage.setItem(\"token\", token);\n      action.payload.navigate(\"/\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* logoutUser(action) {\n  try {\n    const data = yield call(userApi.logout);\n\n    if (data.status === 200) {\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          token: \"\",\n          firstName: \"\",\n          lastName: \"\"\n        }\n      });\n      localStorage.removeItem(\"token\");\n      action.payload.navigate(\"/login\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* renewToken(action) {\n  try {\n    const data = yield call(userApi.renewToken);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* singUpUser(action) {\n  try {\n    const {\n      firstName,\n      lastName,\n      email,\n      password\n    } = action.payload;\n    const data = yield call(userApi.signup, {\n      firstName,\n      lastName,\n      email,\n      password\n    });\n\n    if (data.status === 201) {\n      const {\n        accessToken: token,\n        firstName,\n        lastName,\n        email\n      } = data.data.user;\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          token,\n          firstName,\n          lastName,\n          email\n        }\n      });\n      action.payload.navigate(\"/\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* userUpdate(action) {\n  try {\n    const {\n      firstName,\n      lastName,\n      email\n    } = action.payload;\n    const data = yield call(userApi.userUpdate, {\n      firstName,\n      lastName,\n      email\n    });\n\n    if (data.status === 200) {\n      const {\n        firstName,\n        lastName,\n        email\n      } = data.data.updatedUser;\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          firstName,\n          lastName,\n          email\n        }\n      });\n      action.payload.navigate(\"/profile\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n/* Watchers */\n\n\nfunction* watchDeleteUserSaga() {\n  yield takeLatest(DELETEUSER, userDelete);\n}\n\nfunction* watchGetUserSaga() {\n  yield takeLatest(GETUSER, getUser);\n}\n\nfunction* watchUpdateUserSaga() {\n  yield takeLatest(USERUPDATE, userUpdate);\n}\n\nfunction* watchSignUpSaga() {\n  yield takeLatest(SIGNUP, singUpUser);\n}\n\nfunction* watchRenewTokenSaga() {\n  yield takeLatest(RENEWTOKEN, renewToken);\n}\n\nfunction* watchLogoutSaga() {\n  yield takeLatest(LOGOUT, logoutUser);\n}\n\nfunction* watchLoginSaga() {\n  yield takeLatest(LOGIN, loginUser);\n}\n\nexport default function* userSaga() {\n  yield all([watchDeleteUserSaga(), watchGetUserSaga(), watchUpdateUserSaga(), watchSignUpSaga(), watchRenewTokenSaga(), watchLogoutSaga(), watchLoginSaga()]);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/sagas/user.js"],"names":["takeLatest","put","call","all","DELETEUSER","GETUSER","LOGIN","LOGOUT","RENEWTOKEN","SETDATAUSER","SIGNUP","USERUPDATE","userApi","userDelete","action","data","status","type","token","firstName","lastName","email","payload","navigate","error","console","log","getUser","loginUser","password","checkbox","login","accessToken","user","localStorage","setItem","logoutUser","logout","removeItem","renewToken","singUpUser","signup","userUpdate","updatedUser","watchDeleteUserSaga","watchGetUserSaga","watchUpdateUserSaga","watchSignUpSaga","watchRenewTokenSaga","watchLogoutSaga","watchLoginSaga","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all } from \"@redux-saga/core/effects\";\nimport {\n  DELETEUSER,\n  GETUSER,\n  LOGIN,\n  LOGOUT,\n  RENEWTOKEN,\n  SETDATAUSER,\n  SIGNUP,\n  USERUPDATE,\n} from \"../actionTypes/user\";\nimport { userApi } from \"../services/user\";\n\n/* Worker */\n\nfunction* userDelete(action) {\n  try {\n    const data = yield call(userApi.userDelete);\n    if (data.status === 200) {\n      yield put({\n        type: SETDATAUSER,\n        data: { token: \"\", firstName: \"\", lastName: \"\", email: \"\" },\n      });\n      action.payload.navigate(\"/login\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* getUser() {\n  try {\n    // const data = yield call(userApi.getMe())\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* loginUser(action) {\n  try {\n    const { email, password, checkbox } = action.payload;\n    const data = yield call(userApi.login, { email, password });\n    if (data.status === 200) {\n      const { accessToken: token, firstName, lastName, email } = data.data.user;\n      // yield put({\n      //   type: SETDATAUSER,\n      //   data: { token, firstName, lastName, email },\n      // });\n      if (checkbox) localStorage.setItem(\"token\", token);\n      action.payload.navigate(\"/\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* logoutUser(action) {\n  try {\n    const data = yield call(userApi.logout);\n    if (data.status === 200) {\n      yield put({\n        type: SETDATAUSER,\n        data: { token: \"\", firstName: \"\", lastName: \"\" },\n      });\n      localStorage.removeItem(\"token\");\n      action.payload.navigate(\"/login\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* renewToken(action) {\n  try {\n    const data = yield call(userApi.renewToken);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* singUpUser(action) {\n  try {\n    const { firstName, lastName, email, password } = action.payload;\n    const data = yield call(userApi.signup, {\n      firstName,\n      lastName,\n      email,\n      password,\n    });\n    if (data.status === 201) {\n      const { accessToken: token, firstName, lastName, email } = data.data.user;\n      yield put({\n        type: SETDATAUSER,\n        data: { token, firstName, lastName, email },\n      });\n      action.payload.navigate(\"/\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* userUpdate(action) {\n  try {\n    const { firstName, lastName, email } = action.payload;\n    const data = yield call(userApi.userUpdate, { firstName, lastName, email });\n    if (data.status === 200) {\n      const { firstName, lastName, email } = data.data.updatedUser;\n      yield put({ type: SETDATAUSER, data: { firstName, lastName, email } });\n      action.payload.navigate(\"/profile\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n/* Watchers */\n\nfunction* watchDeleteUserSaga() {\n  yield takeLatest(DELETEUSER, userDelete);\n}\n\nfunction* watchGetUserSaga() {\n  yield takeLatest(GETUSER, getUser);\n}\n\nfunction* watchUpdateUserSaga() {\n  yield takeLatest(USERUPDATE, userUpdate);\n}\n\nfunction* watchSignUpSaga() {\n  yield takeLatest(SIGNUP, singUpUser);\n}\nfunction* watchRenewTokenSaga() {\n  yield takeLatest(RENEWTOKEN, renewToken);\n}\n\nfunction* watchLogoutSaga() {\n  yield takeLatest(LOGOUT, logoutUser);\n}\n\nfunction* watchLoginSaga() {\n  yield takeLatest(LOGIN, loginUser);\n}\n\nexport default function* userSaga() {\n  yield all([\n    watchDeleteUserSaga(),\n    watchGetUserSaga(),\n    watchUpdateUserSaga(),\n    watchSignUpSaga(),\n    watchRenewTokenSaga(),\n    watchLogoutSaga(),\n    watchLoginSaga(),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}