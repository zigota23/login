{"ast":null,"code":"import * as axios from 'axios';\nconst instanse = axios.create({\n  baseURL: 'https://mock-api-nodejs.herokuapp.com'\n});\nexport const userApi = {\n  signup: (firstName, lastName, email, password) => instanse.post('/users/signup', {\n    firstName,\n    lastName,\n    email,\n    password\n  }).then(respose => respose),\n  login: (email, password) => instanse.post('/users/login', {\n    email,\n    password\n  }),\n  renewToken: token => instanse.post('/users/renewAcessToken', {\n    token\n  }),\n  logout: token => instanse.patch('/users/logout', null, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  getMe: () => instanse.get('/users/me'),\n  userUpdate: (firstName, lastName, email, token) => instanse.patch('/users/update', {\n    firstName,\n    lastName,\n    email\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  userDelete: token => instanse.delete('/users/delete', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose)\n};\nexport const productApi = {\n  createProduct: (name, manufacture, calories, rating, description, category, amount, token) => instanse.post('/products/create ', {\n    name,\n    manufacture,\n    calories,\n    rating,\n    description,\n    category,\n    amount\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  getProducts: token => instanse.get('/products', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  getProductWithId: (id, token) => instanse.get('/products/:' + id, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  updateProduct: (name, manufacture, calories, rating, description, category, amount, id, token) => instanse.patch(`/products/:${id}/update`, {\n    name,\n    manufacture,\n    calories,\n    rating,\n    description,\n    category,\n    amount\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  deleteProducts: (id, token) => instanse.delete(`/products/:${id}/delete`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose)\n};","map":{"version":3,"sources":["/home/dev/Max/test/login/src/API/index.js"],"names":["axios","instanse","create","baseURL","userApi","signup","firstName","lastName","email","password","post","then","respose","login","renewToken","token","logout","patch","headers","Authorization","getMe","get","userUpdate","userDelete","delete","productApi","createProduct","name","manufacture","calories","rating","description","category","amount","getProducts","getProductWithId","id","updateProduct","deleteProducts"],"mappings":"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","sourcesContent":["import * as axios from 'axios'\n\nconst instanse = axios.create({\n  baseURL:'https://mock-api-nodejs.herokuapp.com'\n})\n\n\nexport const userApi = {\n  signup:(firstName,lastName,email,password)=>instanse.post('/users/signup',{firstName,lastName,email,password}).then(respose=>respose),\n  login:(email,password)=>instanse.post('/users/login',{email, password}),\n  renewToken:(token)=>instanse.post('/users/renewAcessToken',{token}),\n  logout:(token)=>instanse.patch('/users/logout',null,{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  getMe:()=>instanse.get('/users/me'),\n  userUpdate:(firstName,lastName,email,token)=>instanse.patch('/users/update',{firstName,lastName,email},{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  userDelete:(token)=>instanse.delete('/users/delete',{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose)\n}\n\nexport const productApi = {\n  createProduct:(name,manufacture,calories,rating,description,category,amount,token)=>instanse.post('/products/create ',{name,manufacture,calories,rating,description,category,amount},{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  getProducts:(token)=>instanse.get('/products',{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  getProductWithId:(id,token)=>instanse.get('/products/:'+id,{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  updateProduct:(name,manufacture,calories,rating,description,category,amount,id,token)=>instanse.patch(`/products/:${id}/update`,{name,manufacture,calories,rating,description,category,amount},{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  deleteProducts:(id,token)=>instanse.delete(`/products/:${id}/delete`,{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose)\n}\n\n\n"]},"metadata":{},"sourceType":"module"}