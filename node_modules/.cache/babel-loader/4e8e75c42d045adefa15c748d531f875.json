{"ast":null,"code":"import { takeLatest, put, call, all } from \"@redux-saga/core/effects\";\nimport { setDataUser } from \"../actions/user\";\nimport { DELETEUSER, GETUSER, LOGIN, LOGOUT, RENEWTOKEN, SETDATAUSER, SIGNUP, USERUPDATE } from \"../actionTypes/user\";\nimport { userApi } from \"../services/user\";\n/* Worker */\n\nfunction* userDelete(action) {\n  try {\n    const data = yield call(userApi.userDelete);\n\n    if (data.status === 200) {\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\"\n        }\n      });\n      action.payload.navigate(\"/login\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* getUser() {\n  try {// const data = yield call(userApi.getMe())\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* loginUser(action) {\n  try {\n    const {\n      email,\n      password,\n      checkbox\n    } = action.payload;\n    const data = yield call(userApi.login, {\n      email,\n      password\n    });\n\n    if (data.status === 200) {\n      const {\n        accessToken: token,\n        firstName,\n        lastName,\n        email\n      } = data.data.user;\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          firstName,\n          lastName,\n          email\n        }\n      });\n      localStorage.setItem(\"token\", token);\n      action.payload.navigate(\"/\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* logoutUser(action) {\n  try {\n    const data = yield call(userApi.logout);\n\n    if (data.status === 200) {\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          email: '',\n          firstName: \"\",\n          lastName: \"\"\n        }\n      });\n      localStorage.removeItem(\"token\");\n      action.payload.navigate(\"/login\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* renewToken(action) {\n  try {\n    const data = yield call(userApi.renewToken);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* singUpUser(action) {\n  try {\n    const {\n      firstName,\n      lastName,\n      email,\n      password\n    } = action.payload;\n    const data = yield call(userApi.signup, {\n      firstName,\n      lastName,\n      email,\n      password\n    });\n\n    if (data.status === 201) {\n      const {\n        accessToken: token,\n        firstName,\n        lastName,\n        email\n      } = data.data.user;\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          token,\n          firstName,\n          lastName,\n          email\n        }\n      });\n      action.payload.navigate(\"/\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* userUpdate(action) {\n  try {\n    const {\n      firstName,\n      lastName,\n      email\n    } = action.payload;\n    const data = yield call(userApi.userUpdate, {\n      firstName,\n      lastName,\n      email\n    });\n\n    if (data.status === 200) {\n      const {\n        firstName,\n        lastName,\n        email\n      } = data.data.updatedUser;\n      yield put({\n        type: SETDATAUSER,\n        data: {\n          firstName,\n          lastName,\n          email\n        }\n      });\n      action.payload.navigate(\"/profile\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n/* Watchers */\n\n\nfunction* watchDeleteUserSaga() {\n  yield takeLatest(DELETEUSER, userDelete);\n}\n\nfunction* watchGetUserSaga() {\n  yield takeLatest(GETUSER, getUser);\n}\n\nfunction* watchUpdateUserSaga() {\n  yield takeLatest(USERUPDATE, userUpdate);\n}\n\nfunction* watchSignUpSaga() {\n  yield takeLatest(SIGNUP, singUpUser);\n}\n\nfunction* watchRenewTokenSaga() {\n  yield takeLatest(RENEWTOKEN, renewToken);\n}\n\nfunction* watchLogoutSaga() {\n  yield takeLatest(LOGOUT, logoutUser);\n}\n\nfunction* watchLoginSaga() {\n  yield takeLatest(LOGIN, loginUser);\n}\n\nexport default function* userSaga() {\n  yield all([watchDeleteUserSaga(), watchGetUserSaga(), watchUpdateUserSaga(), watchSignUpSaga(), watchRenewTokenSaga(), watchLogoutSaga(), watchLoginSaga()]);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/sagas/user.js"],"names":["takeLatest","put","call","all","setDataUser","DELETEUSER","GETUSER","LOGIN","LOGOUT","RENEWTOKEN","SETDATAUSER","SIGNUP","USERUPDATE","userApi","userDelete","action","data","status","type","firstName","lastName","email","payload","navigate","error","console","log","getUser","loginUser","password","checkbox","login","accessToken","token","user","localStorage","setItem","logoutUser","logout","removeItem","renewToken","singUpUser","signup","userUpdate","updatedUser","watchDeleteUserSaga","watchGetUserSaga","watchUpdateUserSaga","watchSignUpSaga","watchRenewTokenSaga","watchLogoutSaga","watchLoginSaga","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, all } from \"@redux-saga/core/effects\";\nimport { setDataUser } from \"../actions/user\";\nimport {\n  DELETEUSER,\n  GETUSER,\n  LOGIN,\n  LOGOUT,\n  RENEWTOKEN,\n  SETDATAUSER,\n  SIGNUP,\n  USERUPDATE,\n} from \"../actionTypes/user\";\nimport { userApi } from \"../services/user\";\n\n/* Worker */\n\nfunction* userDelete(action) {\n  try {\n    const data = yield call(userApi.userDelete);\n    if (data.status === 200) {\n      yield put({\n        type: SETDATAUSER,\n        data: {firstName: \"\", lastName: \"\", email: \"\" },\n      });\n      action.payload.navigate(\"/login\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* getUser() {\n  try {\n    // const data = yield call(userApi.getMe())\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* loginUser(action) {\n  try {\n    const { email, password, checkbox } = action.payload;\n    const data = yield call(userApi.login, { email, password });\n    if (data.status === 200) {\n      const { accessToken: token, firstName, lastName, email } = data.data.user;\n      yield put({\n        type: SETDATAUSER,\n        data: {firstName, lastName, email },\n      });\n      localStorage.setItem(\"token\", token);\n      action.payload.navigate(\"/\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* logoutUser(action) {\n  try {\n    const data = yield call(userApi.logout);\n    if (data.status === 200) {\n      yield put({\n        type: SETDATAUSER,\n        data: {email:'',firstName: \"\", lastName: \"\" },\n      });\n      localStorage.removeItem(\"token\");\n      action.payload.navigate(\"/login\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* renewToken(action) {\n  try {\n    const data = yield call(userApi.renewToken);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* singUpUser(action) {\n  try {\n    const { firstName, lastName, email, password } = action.payload;\n    const data = yield call(userApi.signup, {\n      firstName,\n      lastName,\n      email,\n      password,\n    });\n    if (data.status === 201) {\n      const { accessToken: token, firstName, lastName, email } = data.data.user;\n      yield put({\n        type: SETDATAUSER,\n        data: { token, firstName, lastName, email },\n      });\n      action.payload.navigate(\"/\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* userUpdate(action) {\n  try {\n    const { firstName, lastName, email } = action.payload;\n    const data = yield call(userApi.userUpdate, { firstName, lastName, email });\n    if (data.status === 200) {\n      const { firstName, lastName, email } = data.data.updatedUser;\n      yield put({ type: SETDATAUSER, data: { firstName, lastName, email } });\n      action.payload.navigate(\"/profile\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n/* Watchers */\n\nfunction* watchDeleteUserSaga() {\n  yield takeLatest(DELETEUSER, userDelete);\n}\n\nfunction* watchGetUserSaga() {\n  yield takeLatest(GETUSER, getUser);\n}\n\nfunction* watchUpdateUserSaga() {\n  yield takeLatest(USERUPDATE, userUpdate);\n}\n\nfunction* watchSignUpSaga() {\n  yield takeLatest(SIGNUP, singUpUser);\n}\nfunction* watchRenewTokenSaga() {\n  yield takeLatest(RENEWTOKEN, renewToken);\n}\n\nfunction* watchLogoutSaga() {\n  yield takeLatest(LOGOUT, logoutUser);\n}\n\nfunction* watchLoginSaga() {\n  yield takeLatest(LOGIN, loginUser);\n}\n\nexport default function* userSaga() {\n  yield all([\n    watchDeleteUserSaga(),\n    watchGetUserSaga(),\n    watchUpdateUserSaga(),\n    watchSignUpSaga(),\n    watchRenewTokenSaga(),\n    watchLogoutSaga(),\n    watchLoginSaga(),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}