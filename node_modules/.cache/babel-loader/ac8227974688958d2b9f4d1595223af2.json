{"ast":null,"code":"var _jsxFileName = \"/home/dev/Max/test/login/src/section/form/index.jsx\";\nimport React from \"react\";\nimport { validateEmail } from \"../../validate\";\nimport { Button } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport Input from './../../components/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyForm = props => {\n  const items = (values, errors, touched, handleChange, handleBlur, isSubmitting) => props.formItem.map(item => {\n    switch (item.element) {\n      case 'Input':\n        {\n          const {\n            type,\n            name,\n            placeholder,\n            sx\n          } = item.propsItem;\n          return /*#__PURE__*/_jsxDEV(Input, {\n            type: type,\n            name: name,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values[name],\n            errors: errors[name],\n            touched: touched[name],\n            placeholder: placeholder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 11\n          }, this);\n        }\n\n      case 'Button':\n        {\n          const {\n            type,\n            sx\n          } = item.propsItem;\n          return /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: isSubmitting,\n            sx: {\n              marginTop: '10px'\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this);\n        }\n\n      default:\n        return null;\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.initialValues,\n    validate: validateEmail,\n    onSubmit: props.onSubmit,\n    children: _ref => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        onKeyPress: e => {\n          if (e.key === 'Enter') handleSubmit();\n        },\n        children: items(values, errors, touched, handleChange, handleBlur, isSubmitting)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyForm;\nexport default MyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"sources":["/home/dev/Max/test/login/src/section/form/index.jsx"],"names":["React","validateEmail","Button","Formik","Input","MyForm","props","items","values","errors","touched","handleChange","handleBlur","isSubmitting","formItem","map","item","element","type","name","placeholder","sx","propsItem","marginTop","initialValues","onSubmit","handleSubmit","e","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAS;AAEtB,QAAMC,KAAK,GAAG,CAACC,MAAD,EAAQC,MAAR,EAAeC,OAAf,EAAuBC,YAAvB,EAAoCC,UAApC,EAA+CC,YAA/C,KAA+DP,KAAK,CAACQ,QAAN,CAAeC,GAAf,CAAmBC,IAAI,IAAE;AAEpG,YAAOA,IAAI,CAACC,OAAZ;AACE,WAAK,OAAL;AAAa;AACX,gBAAM;AAACC,YAAAA,IAAD;AAAMC,YAAAA,IAAN;AAAWC,YAAAA,WAAX;AAAuBC,YAAAA;AAAvB,cAA6BL,IAAI,CAACM,SAAxC;AACA,8BACE,QAAC,KAAD;AACI,YAAA,IAAI,EAAEJ,IADV;AAEI,YAAA,IAAI,EAAEC,IAFV;AAGI,YAAA,QAAQ,EAAER,YAHd;AAII,YAAA,MAAM,EAAEC,UAJZ;AAKI,YAAA,KAAK,EAAEJ,MAAM,CAACW,IAAD,CALjB;AAMI,YAAA,MAAM,EAAEV,MAAM,CAACU,IAAD,CANlB;AAOI,YAAA,OAAO,EAAET,OAAO,CAACS,IAAD,CAPpB;AAQI,YAAA,WAAW,EAAEC;AARjB;AAAA;AAAA;AAAA;AAAA,kBADF;AAYD;;AAED,WAAK,QAAL;AAAc;AACZ,gBAAM;AAACF,YAAAA,IAAD;AAAMG,YAAAA;AAAN,cAAYL,IAAI,CAACM,SAAvB;AACA,8BACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,EAAET,YAAhC;AAA8C,YAAA,EAAE,EAAE;AAACU,cAAAA,SAAS,EAAC;AAAX,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;;AAED;AAAS,eAAO,IAAP;AA1BX;AA4BD,GA9B4E,CAA7E;;AAgCA,sBACE,QAAC,MAAD;AACM,IAAA,aAAa,EAAEjB,KAAK,CAACkB,aAD3B;AAEM,IAAA,QAAQ,EAAEvB,aAFhB;AAGM,IAAA,QAAQ,EAAEK,KAAK,CAACmB,QAHtB;AAAA,cAKK;AAAA,UAAC;AAACjB,QAAAA,MAAD;AAAQC,QAAAA,MAAR;AACAC,QAAAA,OADA;AACQC,QAAAA,YADR;AAEAC,QAAAA,UAFA;AAEWc,QAAAA,YAFX;AAEwBb,QAAAA;AAFxB,OAAD;AAAA,0BAGC;AACA,QAAA,QAAQ,EAAEa,YADV;AAEA,QAAA,UAAU,EAAEC,CAAC,IAAE;AAAC,cAAGA,CAAC,CAACC,GAAF,KAAU,OAAb,EAAqBF,YAAY;AAAG,SAFpD;AAAA,kBAIGnB,KAAK,CAACC,MAAD,EAAQC,MAAR,EAAeC,OAAf,EAAuBC,YAAvB,EAAoCC,UAApC,EAA+CC,YAA/C;AAJR;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AALL;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArDD;;KAAMR,M;AAuDN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { validateEmail } from \"../../validate\";\nimport {Button} from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport Input from './../../components/Input'\n\nconst MyForm = (props)=>{\n\n  const items = (values,errors,touched,handleChange,handleBlur,isSubmitting)=>(props.formItem.map(item=>{\n\n    switch(item.element){\n      case 'Input':{\n        const {type,name,placeholder,sx} = item.propsItem\n        return(\n          <Input\n              type={type}\n              name={name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values[name]}\n              errors={errors[name]}\n              touched={touched[name]}\n              placeholder={placeholder}\n           />\n        )\n      }\n\n      case 'Button':{\n        const {type,sx} = item.propsItem\n        return(\n          <Button type=\"submit\" disabled={isSubmitting} sx={{marginTop:'10px'}} >\n            Submit\n          </Button>\n        )\n      }\n\n      default: return null\n    }\n  }))\n\n  return (\n    <Formik\n          initialValues={props.initialValues}\n          validate={validateEmail}\n          onSubmit={props.onSubmit}\n        >\n        {({values,errors,\n          touched,handleChange,\n          handleBlur,handleSubmit,isSubmitting}) => (\n          <form \n          onSubmit={handleSubmit}\n          onKeyPress={e=>{if(e.key === 'Enter')handleSubmit()}}\n          >\n            {items(values,errors,touched,handleChange,handleBlur,isSubmitting)}\n          </form>\n        )}\n        </Formik>\n\n  )\n}\n\nexport default MyForm"]},"metadata":{},"sourceType":"module"}