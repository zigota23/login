{"ast":null,"code":"import * as axios from 'axios';\nimport store from '../index';\nconst instanse = axios.create({\n  baseURL: 'https://mock-api-nodejs.herokuapp.com'\n});\ninstanse.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  config.headers.Authorization = `Bearer ${token}`;\n  config.headers['Access-Control-Allow-Origin'] = '*';\n  return config;\n});\ninstanse.interceptors.response.use(response => {\n  console.dir(response);\n  return response;\n}, error => {\n  console.log(error);\n  return Promise.reject(error);\n});\nexport default instanse;","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/services/index.js"],"names":["axios","store","instanse","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","console","dir","error","log","Promise","reject"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAC;AADoB,CAAb,CAAjB;AAIAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkCC,MAAM,IAAE;AACxC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAH,EAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgC,UAASJ,KAAM,EAA/C;AACAD,EAAAA,MAAM,CAACI,OAAP,CAAe,6BAAf,IAA+C,GAA/C;AACA,SAAOJ,MAAP;AACD,CALD;AAOAN,QAAQ,CAACG,YAAT,CAAsBS,QAAtB,CAA+BP,GAA/B,CAAmCO,QAAQ,IAAE;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACC,SAAOA,QAAP;AACD,CAHD,EAGEG,KAAK,IAAE;AACPF,EAAAA,OAAO,CAACG,GAAR,CAAYD,KAAZ;AACC,SAAOE,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,CANF;AAOA,eAAef,QAAf","sourcesContent":["import * as axios from 'axios'\nimport store from '../index'\n\nconst instanse = axios.create({\n  baseURL:'https://mock-api-nodejs.herokuapp.com'\n})\n\ninstanse.interceptors.request.use(config=>{\n  const token = localStorage.getItem('token')\n  config.headers.Authorization = `Bearer ${token}`\n  config.headers['Access-Control-Allow-Origin'] ='*'\n  return config\n})\n\ninstanse.interceptors.response.use(response=>{\n console.dir(response)\n  return response\n},error=>{\n  console.log(error)\n   return Promise.reject(error)\n })\nexport default instanse"]},"metadata":{},"sourceType":"module"}