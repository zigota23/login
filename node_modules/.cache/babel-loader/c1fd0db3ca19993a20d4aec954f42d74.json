{"ast":null,"code":"import instanse from \".\";\nexport const productApi = {\n  createProduct: (name, manufacturer, calories, rating, description, category, amount, token) => instanse.post('/products/create ', {\n    name,\n    manufacturer,\n    calories,\n    rating,\n    description,\n    category,\n    amount\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  getProducts: token => instanse.get('/products', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  getProductWithId: (id, token) => instanse.get('/products/:' + id, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  updateProduct: (name, manufacturer, calories, rating, description, category, amount, id, token) => instanse.patch(`/products/:${id}/update`, {\n    name,\n    manufacturer,\n    calories,\n    rating,\n    description,\n    category,\n    amount\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  deleteProducts: (id, token) => instanse.delete(`/products/:${id}/delete`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose)\n};","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/services/product.js"],"names":["instanse","productApi","createProduct","name","manufacturer","calories","rating","description","category","amount","token","post","headers","Authorization","then","respose","getProducts","get","getProductWithId","id","updateProduct","patch","deleteProducts","delete"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,GAArB;AAGA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,aAAa,EAAC,CAACC,IAAD,EAAMC,YAAN,EAAmBC,QAAnB,EAA4BC,MAA5B,EAAmCC,WAAnC,EAA+CC,QAA/C,EAAwDC,MAAxD,EAA+DC,KAA/D,KAAuEV,QAAQ,CAACW,IAAT,CAAc,mBAAd,EAAkC;AAACR,IAAAA,IAAD;AAAMC,IAAAA,YAAN;AAAmBC,IAAAA,QAAnB;AAA4BC,IAAAA,MAA5B;AAAmCC,IAAAA,WAAnC;AAA+CC,IAAAA,QAA/C;AAAwDC,IAAAA;AAAxD,GAAlC,EAAkG;AAACG,IAAAA,OAAO,EAAC;AAACC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAAhC;AAAT,GAAlG,EAAgJI,IAAhJ,CAAqJC,OAAO,IAAEA,OAA9J,CAD7D;AAExBC,EAAAA,WAAW,EAAEN,KAAD,IAASV,QAAQ,CAACiB,GAAT,CAAa,WAAb,EAAyB;AAACL,IAAAA,OAAO,EAAC;AAACC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAAhC;AAAT,GAAzB,EAAuEI,IAAvE,CAA4EC,OAAO,IAAEA,OAArF,CAFG;AAGxBG,EAAAA,gBAAgB,EAAC,CAACC,EAAD,EAAIT,KAAJ,KAAYV,QAAQ,CAACiB,GAAT,CAAa,gBAAcE,EAA3B,EAA8B;AAACP,IAAAA,OAAO,EAAC;AAACC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAAhC;AAAT,GAA9B,EAA4EI,IAA5E,CAAiFC,OAAO,IAAEA,OAA1F,CAHL;AAIxBK,EAAAA,aAAa,EAAC,CAACjB,IAAD,EAAMC,YAAN,EAAmBC,QAAnB,EAA4BC,MAA5B,EAAmCC,WAAnC,EAA+CC,QAA/C,EAAwDC,MAAxD,EAA+DU,EAA/D,EAAkET,KAAlE,KAA0EV,QAAQ,CAACqB,KAAT,CAAgB,cAAaF,EAAG,SAAhC,EAAyC;AAAChB,IAAAA,IAAD;AAAMC,IAAAA,YAAN;AAAmBC,IAAAA,QAAnB;AAA4BC,IAAAA,MAA5B;AAAmCC,IAAAA,WAAnC;AAA+CC,IAAAA,QAA/C;AAAwDC,IAAAA;AAAxD,GAAzC,EAAyG;AAACG,IAAAA,OAAO,EAAC;AAACC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAAhC;AAAT,GAAzG,EAAuJI,IAAvJ,CAA4JC,OAAO,IAAEA,OAArK,CAJhE;AAKxBO,EAAAA,cAAc,EAAC,CAACH,EAAD,EAAIT,KAAJ,KAAYV,QAAQ,CAACuB,MAAT,CAAiB,cAAaJ,EAAG,SAAjC,EAA0C;AAACP,IAAAA,OAAO,EAAC;AAACC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAAhC;AAAT,GAA1C,EAAwFI,IAAxF,CAA6FC,OAAO,IAAEA,OAAtG;AALH,CAAnB","sourcesContent":["import instanse from \".\"\n\n\nexport const productApi = {\n  createProduct:(name,manufacturer,calories,rating,description,category,amount,token)=>instanse.post('/products/create ',{name,manufacturer,calories,rating,description,category,amount},{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  getProducts:(token)=>instanse.get('/products',{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  getProductWithId:(id,token)=>instanse.get('/products/:'+id,{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  updateProduct:(name,manufacturer,calories,rating,description,category,amount,id,token)=>instanse.patch(`/products/:${id}/update`,{name,manufacturer,calories,rating,description,category,amount},{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  deleteProducts:(id,token)=>instanse.delete(`/products/:${id}/delete`,{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose)\n}\n"]},"metadata":{},"sourceType":"module"}