{"ast":null,"code":"var _jsxFileName = \"/home/dev/Max/test/login/src/components/form/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { validateEmail } from \"../../validate\";\nimport { Button } from \"@mui/material\";\nimport { Formik, useFormik } from \"formik\";\nimport Input from \"../Input\";\nimport { useStyles } from \"./style\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyForm = props => {\n  _s();\n\n  const s = useStyles();\n  const navigate = useNavigate();\n  const [isSubmitting, setSubmitting] = useState(false);\n  const formik = useFormik({\n    initialValues: props.initialValues\n  }, props.onSubmit);\n\n  const items = () => props.formItem.map((item, index) => {\n    switch (item.element) {\n      case \"Input\":\n        {\n          const {\n            type,\n            name,\n            placeholder,\n            sx\n          } = item.propsItem;\n          return /*#__PURE__*/_jsxDEV(Input, {\n            type: type,\n            name: name,\n            onChange: formik.handleChange,\n            value: formik.values ? formik.values[name] : '',\n            errors: formik.errors ? formik.errors[name] : '',\n            touched: formik.touched ? formik.touched[name] : '',\n            placeholder: placeholder,\n            sx: sx\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this);\n        }\n\n      default:\n        return null;\n    }\n  });\n\n  const btnText = {\n    signin: \"Sign In\",\n    signup: \"Sign Up\",\n    changeProfile: \"Save\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [items(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.blockSubmit,\n      children: [props.typeForm == \"signin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.staySing,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"checkbox\",\n          onChange: formik.handleChange,\n          value: formik.values.checkbox,\n          errors: formik.errors.checkbox,\n          touched: formik.touched.checkbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), \"Stay signed in?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.blockButton,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: isSubmitting,\n          variant: \"contained\",\n          children: btnText[props.typeForm]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), props.typeForm == \"signin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.createProfile,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          navigate(\"/signup\");\n        },\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyForm, \"k5Wkp1p2SQNK4tI12UTN3bDE1t8=\", false, function () {\n  return [useStyles, useNavigate, useFormik];\n});\n\n_c = MyForm;\nexport default MyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"sources":["/home/dev/Max/test/login/src/components/form/index.jsx"],"names":["React","validateEmail","Button","Formik","useFormik","Input","useStyles","useNavigate","MyForm","props","s","navigate","isSubmitting","setSubmitting","useState","formik","initialValues","onSubmit","items","formItem","map","item","index","element","type","name","placeholder","sx","propsItem","handleChange","values","errors","touched","btnText","signin","signup","changeProfile","handleSubmit","blockSubmit","typeForm","staySing","checkbox","blockButton","createProfile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { validateEmail } from \"../../validate\";\nimport { Button } from \"@mui/material\";\nimport { Formik,useFormik } from \"formik\";\nimport Input from \"../Input\";\nimport { useStyles } from \"./style\";\nimport { useNavigate } from \"react-router\";\n\nconst MyForm = (props) => {\n  const s = useStyles();\n  const navigate = useNavigate();\n  const [isSubmitting,setSubmitting]= useState(false)\n  const formik = useFormik({initialValues:props.initialValues},props.onSubmit)\n  \n  const items = () =>\n    props.formItem.map((item, index) => {\n      switch (item.element) {\n        case \"Input\": {\n          const { type, name, placeholder, sx } = item.propsItem;\n          return (\n            <Input\n              type={type}\n              name={name}\n              onChange={formik.handleChange}        \n              value={formik.values?formik.values[name]:''}\n              errors={formik.errors?formik.errors[name]:''}\n              touched={formik.touched?formik.touched[name]:''}\n              placeholder={placeholder}\n              sx={sx}\n              key={index}\n            />\n          );\n        }\n\n        default:\n          return null;\n      }\n    });\n\n  const btnText = {\n    signin: \"Sign In\",\n    signup: \"Sign Up\",\n    changeProfile: \"Save\"\n  };\n\n  return (\n        <form onSubmit={formik.handleSubmit}>\n          {items()}\n          <div className={s.blockSubmit}>\n            {props.typeForm == \"signin\" &&\n              <div className={s.staySing}>\n                <input\n                  type=\"checkbox\"\n                  name=\"checkbox\"\n                  onChange={formik.handleChange}\n                  value={formik.values.checkbox}\n                  errors={formik.errors.checkbox}\n                  touched={formik.touched.checkbox}\n                />\n                Stay signed in?\n              </div>\n            }\n            <div className={s.blockButton}>\n              <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\">\n                {btnText[props.typeForm]}\n              </Button>\n            </div>\n          </div>\n          {props.typeForm == \"signin\" &&\n            <div className={s.createProfile}>\n              <Button\n                onClick={() => {\n                  navigate(\"/signup\");\n                }}\n              >\n                Create an account\n              </Button>\n            </div>\n          }\n        </form>\n  );\n};\n\nexport default MyForm;\n"]},"metadata":{},"sourceType":"module"}