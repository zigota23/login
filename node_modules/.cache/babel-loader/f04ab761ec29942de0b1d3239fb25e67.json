{"ast":null,"code":"var _jsxFileName = \"/home/dev/Max/test/login/src/hoc/withRedirectLogin.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withRedirectLogin = props => {\n  var _s = $RefreshSig$();\n\n  const RedirectLogin = () => {\n    _s();\n\n    debugger;\n    const navigate = useNavigate();\n    if (props) return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 20\n    }, this);else navigate('/login');\n  };\n\n  _s(RedirectLogin, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n\n  const mapStateToProps = state => {\n    return {\n      token: state.authReducer.token\n    };\n  };\n\n  return connect(mapStateToProps, {})(RedirectLogin);\n};\n\nexport default withRedirectLogin;","map":{"version":3,"sources":["/home/dev/Max/test/login/src/hoc/withRedirectLogin.jsx"],"names":["React","connect","useNavigate","withRedirectLogin","props","RedirectLogin","navigate","mapStateToProps","state","token","authReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,cAA5B;;;AAGA,MAAMC,iBAAiB,GAAIC,KAAD,IAAS;AAAA;;AAEjC,QAAMC,aAAa,GAAG,MAAI;AAAA;;AACxB;AACA,UAAMC,QAAQ,GAAIJ,WAAW,EAA7B;AACA,QAAGE,KAAH,EAAS,oBAAM,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAN,CAAT,KACKE,QAAQ,CAAC,QAAD,CAAR;AACN,GALD;;AAFiC,KAE3BD,aAF2B;AAAA,YAIbH,WAJa;AAAA;;AAS/B,QAAMK,eAAe,GAAIC,KAAD,IAAS;AAC/B,WAAO;AACLC,MAAAA,KAAK,EAACD,KAAK,CAACE,WAAN,CAAkBD;AADnB,KAAP;AAGD,GAJD;;AAMF,SAAOR,OAAO,CAACM,eAAD,EAAiB,EAAjB,CAAP,CAA4BF,aAA5B,CAAP;AACD,CAhBD;;AAiBA,eAAeF,iBAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\n\n\nconst withRedirectLogin = (props)=>{\n  \n  const RedirectLogin = ()=>{\n    debugger\n    const navigate =  useNavigate()\n    if(props)return<Component/>\n    else navigate('/login')\n  }\n  \n    const mapStateToProps = (state)=>{\n      return {\n        token:state.authReducer.token\n      }\n    }\n\n  return connect(mapStateToProps,{})(RedirectLogin)\n}\nexport default withRedirectLogin"]},"metadata":{},"sourceType":"module"}