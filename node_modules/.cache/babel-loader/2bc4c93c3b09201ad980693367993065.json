{"ast":null,"code":"import { takeEvery, put } from \"@redux-saga/core/effects\";\nimport { productApi } from \"../../../../API\";\n\nasync function getProds(token) {\n  return await productApi.getProducts(token);\n}\n\nfunction* workerSaga(_ref) {\n  let {\n    token\n  } = _ref;\n  const data = yield getProds(token);\n\n  if (data.status === 200) {\n    yield put({\n      type: 'SET_PRODUCTS',\n      data: {\n        name: data.data,\n        manufacture,\n        calories,\n        rating,\n        description,\n        category,\n        amount\n      }\n    });\n  }\n}\n\nexport default function* getProductsSaga() {\n  yield takeEvery('GET_PRODUCTS', workerSaga);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/redux/sagas/products/getProducts/index.js"],"names":["takeEvery","put","productApi","getProds","token","getProducts","workerSaga","data","status","type","name","manufacture","calories","rating","description","category","amount","getProductsSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,QAA8B,0BAA9B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAGA,eAAeC,QAAf,CAAwBC,KAAxB,EAA8B;AAC5B,SAAO,MAAMF,UAAU,CAACG,WAAX,CAAuBD,KAAvB,CAAb;AACD;;AAED,UAAUE,UAAV,OAA6B;AAAA,MAAR;AAACF,IAAAA;AAAD,GAAQ;AAC3B,QAAMG,IAAI,GAAG,MAAMJ,QAAQ,CAACC,KAAD,CAA3B;;AACA,MAAGG,IAAI,CAACC,MAAL,KAAgB,GAAnB,EAAuB;AACrB,UAAMP,GAAG,CAAC;AAACQ,MAAAA,IAAI,EAAC,cAAN;AAAqBF,MAAAA,IAAI,EAAC;AAACG,QAAAA,IAAI,EAACH,IAAI,CAACA,IAAX;AAAgBI,QAAAA,WAAhB;AAA4BC,QAAAA,QAA5B;AAAqCC,QAAAA,MAArC;AAA4CC,QAAAA,WAA5C;AAAwDC,QAAAA,QAAxD;AAAiEC,QAAAA;AAAjE;AAA1B,KAAD,CAAT;AACD;AACF;;AAED,eAAe,UAAUC,eAAV,GAA2B;AACxC,QAAMjB,SAAS,CAAC,cAAD,EAAgBM,UAAhB,CAAf;AACD","sourcesContent":["import { takeEvery ,put} from \"@redux-saga/core/effects\";\nimport { productApi } from \"../../../../API\";\n\n\nasync function getProds(token){\n  return await productApi.getProducts(token)\n}\n\nfunction* workerSaga({token}){\n  const data = yield getProds(token)\n  if(data.status === 200){\n    yield put({type:'SET_PRODUCTS',data:{name:data.data,manufacture,calories,rating,description,category,amount}})\n  }\n}\n\nexport default function* getProductsSaga(){\n  yield takeEvery('GET_PRODUCTS',workerSaga)\n}"]},"metadata":{},"sourceType":"module"}