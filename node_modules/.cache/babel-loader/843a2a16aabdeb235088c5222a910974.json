{"ast":null,"code":"var _jsxFileName = \"/home/dev/Max/test/login/src/pages/login/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport Header from \"../../section/header\";\nimport { useStyles } from \"./style\";\nimport Input from './../../components/Input';\nimport { connect } from \"react-redux\";\nimport { userLogin } from \"../../redux/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  let [data, setData] = useState({\n    email: '',\n    password: ''\n  });\n  const s = useStyles();\n\n  const validateEmail = values => {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  };\n\n  const onSubmit = (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n    props.userLogin(values.email, values.password);\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.loginForm,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: validateEmail,\n        onSubmit: onSubmit,\n        children: _ref2 => {\n          let {\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              name: \"name\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email,\n              errors: errors.email,\n              touched: touched.email,\n              placeholder: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: \"email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email,\n              errors: errors.email,\n              touched: touched.email,\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: \"email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email,\n              errors: errors.email,\n              touched: touched.email,\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              name: \"password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password,\n              errors: errors.password,\n              touched: touched.password,\n              placeholder: \"Password\",\n              sx: {\n                marginTop: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: isSubmitting,\n              sx: {\n                marginTop: '10px'\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"LMemNkcSCquNYN8qEGca1sWc0Jg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {\n  userLogin\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/dev/Max/test/login/src/pages/login/index.jsx"],"names":["Button","Formik","React","useState","Header","useStyles","Input","connect","userLogin","Login","props","data","setData","email","password","s","validateEmail","values","errors","test","onSubmit","setSubmitting","loginForm","touched","handleChange","handleBlur","handleSubmit","isSubmitting","marginTop","mapStateToProps","state"],"mappings":"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","sourcesContent":["import {Button} from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport Header from \"../../section/header\";\nimport { useStyles } from \"./style\";\nimport Input from './../../components/Input'\nimport { connect } from \"react-redux\";\nimport { userLogin } from \"../../redux/auth\";\n\n\n\nconst Login = (props)=>{\n\n  let [data,setData]=useState({email:'',password:''})\n\n  const s = useStyles()\n\n  const validateEmail = values => {\n    const errors = {};\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n    ) {\n      errors.email = 'Invalid email address';\n    }\n    return errors;\n  }\n\n  \n\n  const onSubmit = (values, { setSubmitting }) => {\n    props.userLogin(values.email,values.password)  \n    setSubmitting(false)\n}\n  return(\n    <div>\n      <Header/>\n      <div className={s.loginForm}>\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validate={validateEmail}\n          onSubmit={onSubmit}\n        >\n        {({values,errors,\n          touched,handleChange,\n          handleBlur,handleSubmit,isSubmitting}) => (\n          <form onSubmit={handleSubmit}>\n            <Input\n              type=\"name\"\n              name=\"name\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              errors={errors.email}\n              touched={touched.email}\n              placeholder='name'\n            />\n              <Input\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                errors={errors.email}\n                touched={touched.email}\n                placeholder='Email'\n              />\n              <Input\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                errors={errors.email}\n                touched={touched.email}\n                placeholder='Email'\n              />\n            <Input\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              errors={errors.password}\n              touched={touched.password}\n              placeholder='Password'\n              sx={{marginTop:'20px'}}\n            />\n            <Button type=\"submit\" disabled={isSubmitting} sx={{marginTop:'10px'}}>\n              Submit\n            </Button>\n          </form>\n        )}\n        </Formik>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state)=>{\n  return{}\n}\n\nexport default connect(mapStateToProps,{userLogin})(Login)  \n\n"]},"metadata":{},"sourceType":"module"}