{"ast":null,"code":"import { takeEvery } from \"@redux-saga/core/effects\";\nimport { productApi } from \"../../../../API\";\n\nasync function updateProd(name, manufacture, calories, rating, description, category, amount, id, token) {\n  return await productApi.updateProduct(name, manufacture, calories, rating, description, category, amount, id, token);\n}\n\nfunction* workerSaga(_ref) {\n  let {\n    name,\n    manufacture,\n    calories,\n    rating,\n    description,\n    category,\n    amount,\n    id,\n    token\n  } = _ref;\n  const data = yield updateProd(name, manufacture, calories, rating, description, category, amount, id, token);\n}\n\nexport default function* updateProductSaga() {\n  yield takeEvery('UPDATE_PRODUCT', workerSaga);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/redux/sagas/products/updateProduct/index.js"],"names":["takeEvery","productApi","updateProd","name","manufacture","calories","rating","description","category","amount","id","token","updateProduct","workerSaga","data","updateProductSaga"],"mappings":"AAAA,SAASA,SAAT,QAA0B,0BAA1B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAGA,eAAeC,UAAf,CAA0BC,IAA1B,EAA+BC,WAA/B,EAA2CC,QAA3C,EAAoDC,MAApD,EAA2DC,WAA3D,EAAuEC,QAAvE,EAAgFC,MAAhF,EAAuFC,EAAvF,EAA0FC,KAA1F,EAAgG;AAC9F,SAAO,MAAMV,UAAU,CAACW,aAAX,CAAyBT,IAAzB,EAA8BC,WAA9B,EAA0CC,QAA1C,EAAmDC,MAAnD,EAA0DC,WAA1D,EAAsEC,QAAtE,EAA+EC,MAA/E,EAAsFC,EAAtF,EAAyFC,KAAzF,CAAb;AACD;;AAED,UAAUE,UAAV,OAA6F;AAAA,MAAxE;AAACV,IAAAA,IAAD;AAAMC,IAAAA,WAAN;AAAkBC,IAAAA,QAAlB;AAA2BC,IAAAA,MAA3B;AAAkCC,IAAAA,WAAlC;AAA8CC,IAAAA,QAA9C;AAAuDC,IAAAA,MAAvD;AAA8DC,IAAAA,EAA9D;AAAiEC,IAAAA;AAAjE,GAAwE;AAC3F,QAAMG,IAAI,GAAG,MAAMZ,UAAU,CAACC,IAAD,EAAMC,WAAN,EAAkBC,QAAlB,EAA2BC,MAA3B,EAAkCC,WAAlC,EAA8CC,QAA9C,EAAuDC,MAAvD,EAA8DC,EAA9D,EAAiEC,KAAjE,CAA7B;AACD;;AAED,eAAe,UAAUI,iBAAV,GAA6B;AAC1C,QAAMf,SAAS,CAAC,gBAAD,EAAkBa,UAAlB,CAAf;AACD","sourcesContent":["import { takeEvery } from \"@redux-saga/core/effects\";\nimport { productApi } from \"../../../../API\";\n\n\nasync function updateProd(name,manufacture,calories,rating,description,category,amount,id,token){\n  return await productApi.updateProduct(name,manufacture,calories,rating,description,category,amount,id,token)\n}\n\nfunction* workerSaga({name,manufacture,calories,rating,description,category,amount,id,token}){\n  const data = yield updateProd(name,manufacture,calories,rating,description,category,amount,id,token)\n}\n\nexport default function* updateProductSaga(){\n  yield takeEvery('UPDATE_PRODUCT',workerSaga)\n}"]},"metadata":{},"sourceType":"module"}