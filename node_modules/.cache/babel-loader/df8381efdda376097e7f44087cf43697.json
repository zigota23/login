{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { userApi } from './../../../API';\n\nasync function loginUser(email, password) {\n  return await userApi.login(email, password);\n}\n\nfunction* workerSaga(_ref) {\n  let {\n    email,\n    password\n  } = _ref;\n  const data = yield call(loginUser(email, password));\n\n  if (data.status === 200) {\n    console.log('fdfd');\n    yield put({\n      type: 'SET_DATA_USER',\n      data: {\n        token: data.data.user.accessToken,\n        firstName: data.data.user.firstName,\n        lastName: data.data.user.lastName\n      }\n    });\n  }\n}\n\nexport default function* loginSaga() {\n  yield takeEvery('LOGIN', workerSaga);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/redux/sagas/login/index.js"],"names":["takeEvery","call","put","userApi","loginUser","email","password","login","workerSaga","data","status","console","log","type","token","user","accessToken","firstName","lastName","loginSaga"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,IAAlB,EAAuBC,GAAvB,QAAiC,oBAAjC;AACA,SAAQC,OAAR,QAAsB,gBAAtB;;AAGA,eAAeC,SAAf,CAAyBC,KAAzB,EAA+BC,QAA/B,EAAwC;AACtC,SAAO,MAAMH,OAAO,CAACI,KAAR,CAAcF,KAAd,EAAoBC,QAApB,CAAb;AACD;;AAED,UAAUE,UAAV,OAAsC;AAAA,MAAjB;AAACH,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAiB;AACpC,QAAMG,IAAI,GAAG,MAAMR,IAAI,CAACG,SAAS,CAACC,KAAD,EAAOC,QAAP,CAAV,CAAvB;;AACA,MAAGG,IAAI,CAACC,MAAL,KAAgB,GAAnB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAMV,GAAG,CAAC;AAACW,MAAAA,IAAI,EAAC,eAAN;AAAsBJ,MAAAA,IAAI,EAAC;AAACK,QAAAA,KAAK,EAACL,IAAI,CAACA,IAAL,CAAUM,IAAV,CAAeC,WAAtB;AAAkCC,QAAAA,SAAS,EAACR,IAAI,CAACA,IAAL,CAAUM,IAAV,CAAeE,SAA3D;AAAqEC,QAAAA,QAAQ,EAACT,IAAI,CAACA,IAAL,CAAUM,IAAV,CAAeG;AAA7F;AAA3B,KAAD,CAAT;AACD;AACF;;AAED,eAAe,UAAUC,SAAV,GAAqB;AAClC,QAAMnB,SAAS,CAAC,OAAD,EAASQ,UAAT,CAAf;AACD","sourcesContent":["import {takeEvery,call,put} from 'redux-saga/effects'\nimport {userApi} from './../../../API'\n\n\nasync function loginUser(email,password){\n  return await userApi.login(email,password)\n}\n\nfunction* workerSaga({email,password}){\n  const data = yield call(loginUser(email,password))\n  if(data.status === 200){\n    console.log('fdfd')\n    yield put({type:'SET_DATA_USER',data:{token:data.data.user.accessToken,firstName:data.data.user.firstName,lastName:data.data.user.lastName}})\n  }\n}\n\nexport default function* loginSaga(){\n  yield takeEvery('LOGIN',workerSaga)\n}"]},"metadata":{},"sourceType":"module"}