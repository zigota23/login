{"ast":null,"code":"import { takeEvery, put } from 'redux-saga/effects';\nimport { userApi } from '../../../../../API';\n\nasync function signUpUser(firstName, lastName, email, password) {\n  return await userApi.signup(firstName, lastName, email, password);\n}\n\nfunction* sagaWorker(_ref) {\n  let {\n    firstName,\n    lastName,\n    email,\n    password\n  } = _ref;\n  const data = yield signUpUser(firstName, lastName, email, password);\n\n  if (data.status === 201) {\n    yield put({\n      type: 'SET_DATA_USER',\n      data: {\n        token: data.data.user.accessToken,\n        firstName: data.data.user.firstName,\n        lastName: data.data.user.lastName,\n        email: data.data.user.email\n      }\n    });\n  }\n}\n\nexport default function* signUpSaga() {\n  yield takeEvery('SIGNUP', sagaWorker);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/redux/sagas/users/signup/index.js"],"names":["takeEvery","put","userApi","signUpUser","firstName","lastName","email","password","signup","sagaWorker","data","status","type","token","user","accessToken","signUpSaga"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,GAAlB,QAA4B,oBAA5B;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,eAAeC,UAAf,CAA0BC,SAA1B,EAAoCC,QAApC,EAA6CC,KAA7C,EAAmDC,QAAnD,EAA4D;AAC1D,SAAO,MAAML,OAAO,CAACM,MAAR,CAAeJ,SAAf,EAAyBC,QAAzB,EAAkCC,KAAlC,EAAwCC,QAAxC,CAAb;AACD;;AAED,UAAUE,UAAV,OAAyD;AAAA,MAApC;AAACL,IAAAA,SAAD;AAAWC,IAAAA,QAAX;AAAoBC,IAAAA,KAApB;AAA0BC,IAAAA;AAA1B,GAAoC;AACvD,QAAMG,IAAI,GAAG,MAAMP,UAAU,CAACC,SAAD,EAAWC,QAAX,EAAoBC,KAApB,EAA0BC,QAA1B,CAA7B;;AACA,MAAGG,IAAI,CAACC,MAAL,KAAgB,GAAnB,EAAuB;AACrB,UAAMV,GAAG,CAAC;AAACW,MAAAA,IAAI,EAAC,eAAN;AAAsBF,MAAAA,IAAI,EAAC;AAACG,QAAAA,KAAK,EAACH,IAAI,CAACA,IAAL,CAAUI,IAAV,CAAeC,WAAtB;AAAkCX,QAAAA,SAAS,EAACM,IAAI,CAACA,IAAL,CAAUI,IAAV,CAAeV,SAA3D;AAAqEC,QAAAA,QAAQ,EAACK,IAAI,CAACA,IAAL,CAAUI,IAAV,CAAeT,QAA7F;AAAsGC,QAAAA,KAAK,EAACI,IAAI,CAACA,IAAL,CAAUI,IAAV,CAAeR;AAA3H;AAA3B,KAAD,CAAT;AACD;AACF;;AAED,eAAe,UAAUU,UAAV,GAAsB;AACnC,QAAMhB,SAAS,CAAC,QAAD,EAAUS,UAAV,CAAf;AACD","sourcesContent":["import {takeEvery,put} from 'redux-saga/effects'\nimport { userApi } from '../../../../../API'\n\nasync function signUpUser(firstName,lastName,email,password){\n  return await userApi.signup(firstName,lastName,email,password)\n}\n\nfunction* sagaWorker({firstName,lastName,email,password}){\n  const data = yield signUpUser(firstName,lastName,email,password)\n  if(data.status === 201){\n    yield put({type:'SET_DATA_USER',data:{token:data.data.user.accessToken,firstName:data.data.user.firstName,lastName:data.data.user.lastName,email:data.data.user.email}})\n  }\n} \n\nexport default function* signUpSaga(){\n  yield takeEvery('SIGNUP',sagaWorker)\n}"]},"metadata":{},"sourceType":"module"}