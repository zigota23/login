{"ast":null,"code":"var _jsxFileName = \"/home/dev/Max/test/login/src/pages/login/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { FormControl, InputLabel, Button } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport Header from \"../../section/header\";\nimport { useStyles } from \"./style\";\nimport Input from './../../components/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  let [data, setData] = useState({\n    email: '',\n    password: ''\n  });\n  const s = useStyles();\n\n  const validateEmail = values => {\n    const errors = {};\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  };\n\n  const onSubmit = (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.login,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: validateEmail,\n        onSubmit: onSubmit,\n        children: _ref2 => {\n          let {\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                onChange: handleChange,\n                onBlur: handleBlur,\n                value: values.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), errors.email && touched.email && errors.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }, this), errors.password && touched.password && errors.password]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"LMemNkcSCquNYN8qEGca1sWc0Jg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/dev/Max/test/login/src/pages/login/index.jsx"],"names":["FormControl","InputLabel","Button","Formik","React","useState","Header","useStyles","Input","Login","props","data","setData","email","password","s","validateEmail","values","errors","test","onSubmit","setSubmitting","alert","JSON","stringify","login","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import { FormControl, InputLabel,Button} from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport Header from \"../../section/header\";\nimport { useStyles } from \"./style\";\nimport Input from './../../components/Input'\n\n\n\nconst Login = (props)=>{\n\n  let [data,setData]=useState({email:'',password:''})\n\n  const s = useStyles()\n\n  const validateEmail = values => {\n    const errors = {};\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n    ) {\n      errors.email = 'Invalid email address';\n    }\n    return errors;\n  }\n\n  const onSubmit = (values, { setSubmitting }) => {\n    alert(JSON.stringify(values, null, 2));\n    setSubmitting(false);\n}\n\n  return(\n    <div>\n      <Header/>\n      <div className={s.login}>\n        <Formik\n        initialValues={{ email: '', password: '' }}\n        validate={validateEmail}\n        onSubmit={onSubmit}\n          >\n        {({values,errors,\n          touched,handleChange,\n          handleBlur,handleSubmit,isSubmitting}) => (\n          <form onSubmit={handleSubmit}>\n            <div>\n                <input\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {errors.email && touched.email && errors.email}\n            </div>\n           <div>\n              <div>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.password}\n                />\n              </div>\n            {errors.password && touched.password && errors.password}\n            </div>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </form>\n        )}\n        </Formik>\n      </div>\n    </div>\n  )\n}\n\nexport default Login  \n\n"]},"metadata":{},"sourceType":"module"}