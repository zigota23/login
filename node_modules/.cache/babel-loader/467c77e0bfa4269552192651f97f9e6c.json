{"ast":null,"code":"import instanse from \".\";\nexport const productApi = {\n  createProduct: function (_ref) {\n    let {\n      token\n    } = _ref;\n\n    for (var _len = arguments.length, payload = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      payload[_key - 1] = arguments[_key];\n    }\n\n    return instanse.post('/products/create ', { ...payload\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(respose => respose);\n  },\n  getProducts: _ref2 => {\n    let {\n      token\n    } = _ref2;\n    return instanse.get('/products', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(respose => respose);\n  },\n  getProductWithId: (id, token) => instanse.get('/products/:' + id, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  updateProduct: (name, manufacturer, calories, rating, description, category, amount, id, token) => instanse.patch(`/products/:${id}/update`, {\n    name,\n    manufacturer,\n    calories,\n    rating,\n    description,\n    category,\n    amount\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  deleteProducts: (id, token) => instanse.delete(`/products/:${id}/delete`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose)\n};","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/services/product.js"],"names":["instanse","productApi","createProduct","token","payload","post","headers","Authorization","then","respose","getProducts","get","getProductWithId","id","updateProduct","name","manufacturer","calories","rating","description","category","amount","patch","deleteProducts","delete"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,GAArB;AAGA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,aAAa,EAAC;AAAA,QAAC;AAACC,MAAAA;AAAD,KAAD;;AAAA,sCAAYC,OAAZ;AAAYA,MAAAA,OAAZ;AAAA;;AAAA,WAAsBJ,QAAQ,CAACK,IAAT,CAAc,mBAAd,EAAkC,EAAC,GAAGD;AAAJ,KAAlC,EAA+C;AAACE,MAAAA,OAAO,EAAC;AAACC,QAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AAAT,KAA/C,EAA6FK,IAA7F,CAAkGC,OAAO,IAAEA,OAA3G,CAAtB;AAAA,GADU;AAGxBC,EAAAA,WAAW,EAAC;AAAA,QAAC;AAACP,MAAAA;AAAD,KAAD;AAAA,WAAWH,QAAQ,CAACW,GAAT,CAAa,WAAb,EAAyB;AAACL,MAAAA,OAAO,EAAC;AAACC,QAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AAAT,KAAzB,EAAuEK,IAAvE,CAA4EC,OAAO,IAAEA,OAArF,CAAX;AAAA,GAHY;AAKxBG,EAAAA,gBAAgB,EAAC,CAACC,EAAD,EAAIV,KAAJ,KAAYH,QAAQ,CAACW,GAAT,CAAa,gBAAcE,EAA3B,EAA8B;AAACP,IAAAA,OAAO,EAAC;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AAAT,GAA9B,EAA4EK,IAA5E,CAAiFC,OAAO,IAAEA,OAA1F,CALL;AAOxBK,EAAAA,aAAa,EAAC,CAACC,IAAD,EAAMC,YAAN,EAAmBC,QAAnB,EAA4BC,MAA5B,EAAmCC,WAAnC,EAA+CC,QAA/C,EAAwDC,MAAxD,EAA+DR,EAA/D,EAAkEV,KAAlE,KAA0EH,QAAQ,CAACsB,KAAT,CAAgB,cAAaT,EAAG,SAAhC,EAAyC;AAACE,IAAAA,IAAD;AAAMC,IAAAA,YAAN;AAAmBC,IAAAA,QAAnB;AAA4BC,IAAAA,MAA5B;AAAmCC,IAAAA,WAAnC;AAA+CC,IAAAA,QAA/C;AAAwDC,IAAAA;AAAxD,GAAzC,EAAyG;AAACf,IAAAA,OAAO,EAAC;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AAAT,GAAzG,EAAuJK,IAAvJ,CAA4JC,OAAO,IAAEA,OAArK,CAPhE;AASxBc,EAAAA,cAAc,EAAC,CAACV,EAAD,EAAIV,KAAJ,KAAYH,QAAQ,CAACwB,MAAT,CAAiB,cAAaX,EAAG,SAAjC,EAA0C;AAACP,IAAAA,OAAO,EAAC;AAACC,MAAAA,aAAa,EAAG,UAASJ,KAAM;AAAhC;AAAT,GAA1C,EAAwFK,IAAxF,CAA6FC,OAAO,IAAEA,OAAtG;AATH,CAAnB","sourcesContent":["import instanse from \".\"\n\n\nexport const productApi = {\n  createProduct:({token},...payload)=>instanse.post('/products/create ',{...payload},{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n\n  getProducts:({token})=>instanse.get('/products',{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n\n  getProductWithId:(id,token)=>instanse.get('/products/:'+id,{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n\n  updateProduct:(name,manufacturer,calories,rating,description,category,amount,id,token)=>instanse.patch(`/products/:${id}/update`,{name,manufacturer,calories,rating,description,category,amount},{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  \n  deleteProducts:(id,token)=>instanse.delete(`/products/:${id}/delete`,{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose)\n}\n"]},"metadata":{},"sourceType":"module"}