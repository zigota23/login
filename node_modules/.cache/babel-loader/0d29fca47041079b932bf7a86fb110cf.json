{"ast":null,"code":"import * as axios from 'axios';\nimport { userApi } from './user';\nimport Cookies from 'js-cookie';\nconst instanse = axios.create({\n  baseURL: 'https://mock-api-nodejs.herokuapp.com/'\n});\ninstanse.interceptors.request.use(config => {\n  const token = Cookies;\n  config.headers.Authorization = `Bearer ${token}`;\n  config.headers['Access-Control-Allow-Origin'] = '*';\n  return config;\n});\ninstanse.interceptors.response.use(response => {\n  return response;\n}, async function (error) {\n  const originalRequest = error.config;\n\n  if (error.response.status === 401 && !originalRequest._retry && originalRequest.url != \"/users/renewAcessToken\") {\n    originalRequest._retry = true;\n    await userApi.renewToken({\n      token: localStorage.getItem('token')\n    });\n    return instanse(originalRequest);\n  }\n\n  return error;\n});\nexport default instanse;","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/services/index.js"],"names":["axios","userApi","Cookies","instanse","create","baseURL","interceptors","request","use","config","token","headers","Authorization","response","error","originalRequest","status","_retry","url","renewToken","localStorage","getItem"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAC;AADoB,CAAb,CAAjB;AAIAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkCC,MAAM,IAAE;AACxC,QAAMC,KAAK,GAAGR,OAAd;AACAO,EAAAA,MAAM,CAACE,OAAP,CAAeC,aAAf,GAAgC,UAASF,KAAM,EAA/C;AACAD,EAAAA,MAAM,CAACE,OAAP,CAAe,6BAAf,IAA+C,GAA/C;AACA,SAAOF,MAAP;AACD,CALD;AAOAN,QAAQ,CAACG,YAAT,CAAsBO,QAAtB,CAA+BL,GAA/B,CAAoCK,QAAD,IAAc;AAC/C,SAAOA,QAAP;AACD,CAFD,EAEG,gBAAgBC,KAAhB,EAAuB;AACxB,QAAMC,eAAe,GAAGD,KAAK,CAACL,MAA9B;;AACA,MAAIK,KAAK,CAACD,QAAN,CAAeG,MAAf,KAA0B,GAA1B,IAAiC,CAACD,eAAe,CAACE,MAAlD,IAA4DF,eAAe,CAACG,GAAhB,IAAuB,wBAAvF,EAAiH;AAC/GH,IAAAA,eAAe,CAACE,MAAhB,GAAyB,IAAzB;AACA,UAAMhB,OAAO,CAACkB,UAAR,CAAmB;AAACT,MAAAA,KAAK,EAACU,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAP,KAAnB,CAAN;AACA,WAAOlB,QAAQ,CAACY,eAAD,CAAf;AACD;;AACD,SAAOD,KAAP;AACD,CAVD;AAWA,eAAeX,QAAf","sourcesContent":["import * as axios from 'axios'\nimport { userApi } from './user'\nimport Cookies from 'js-cookie'\n\nconst instanse = axios.create({\n  baseURL:'https://mock-api-nodejs.herokuapp.com/'\n})\n\ninstanse.interceptors.request.use(config=>{\n  const token = Cookies\n  config.headers.Authorization = `Bearer ${token}`\n  config.headers['Access-Control-Allow-Origin'] ='*'\n  return config\n})\n\ninstanse.interceptors.response.use((response) => {\n  return response\n}, async function (error) {\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest._retry && originalRequest.url != \"/users/renewAcessToken\") {\n    originalRequest._retry = true;\n    await userApi.renewToken({token:localStorage.getItem('token')});            \n    return instanse(originalRequest);\n  }\n  return error;\n})\nexport default instanse"]},"metadata":{},"sourceType":"module"}