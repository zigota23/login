{"ast":null,"code":"import * as axios from 'axios';\nconst instanse = axios.create({\n  baseURL: 'https://mock-api-nodejs.herokuapp.com'\n});\nexport const userApi = {\n  signup: (firstName, lastName, email, password) => instanse.post('/users/signup', {\n    firstName,\n    lastName,\n    email,\n    password\n  }).then(respose => {\n    instanse.defaults.headers.common = {\n      'Authorization': `Bearer ${respose.data.data.user.accessToken}`\n    };\n    return respose.data;\n  }),\n  login: (email, password) => instanse.post('/users/login', {\n    email,\n    password\n  }),\n  renewToken: token => instanse.post('/users/renewAcessToken', {\n    token\n  }),\n  logout: token => instanse.patch('/users/logout', null, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(respose => respose),\n  getMe: () => instanse.get('/users/me'),\n  userUpdate: (firstName, lastName, email) => instanse.patch('/users/update', {\n    firstName,\n    lastName,\n    email\n  })\n};","map":{"version":3,"sources":["/home/dev/Max/test/login/src/API/index.js"],"names":["axios","instanse","create","baseURL","userApi","signup","firstName","lastName","email","password","post","then","respose","defaults","headers","common","data","user","accessToken","login","renewToken","token","logout","patch","Authorization","getMe","get","userUpdate"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAC;AADoB,CAAb,CAAjB;AAKA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,MAAM,EAAC,CAACC,SAAD,EAAWC,QAAX,EAAoBC,KAApB,EAA0BC,QAA1B,KAAqCR,QAAQ,CAACS,IAAT,CAAc,eAAd,EAA8B;AAACJ,IAAAA,SAAD;AAAWC,IAAAA,QAAX;AAAoBC,IAAAA,KAApB;AAA0BC,IAAAA;AAA1B,GAA9B,EAAmEE,IAAnE,CAAwEC,OAAO,IAAE;AAE3HX,IAAAA,QAAQ,CAACY,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,GAAmC;AAAC,uBAAkB,UAASH,OAAO,CAACI,IAAR,CAAaA,IAAb,CAAkBC,IAAlB,CAAuBC,WAAY;AAA/D,KAAnC;AACA,WAAON,OAAO,CAACI,IAAf;AAAoB,GAHsB,CADvB;AAKrBG,EAAAA,KAAK,EAAC,CAACX,KAAD,EAAOC,QAAP,KAAkBR,QAAQ,CAACS,IAAT,CAAc,cAAd,EAA6B;AAACF,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAA7B,CALH;AAMrBW,EAAAA,UAAU,EAAEC,KAAD,IAASpB,QAAQ,CAACS,IAAT,CAAc,wBAAd,EAAuC;AAACW,IAAAA;AAAD,GAAvC,CANC;AAOrBC,EAAAA,MAAM,EAAED,KAAD,IAASpB,QAAQ,CAACsB,KAAT,CAAe,eAAf,EAA+B,IAA/B,EAAoC;AAACT,IAAAA,OAAO,EAAC;AAACU,MAAAA,aAAa,EAAG,UAASH,KAAM;AAAhC;AAAT,GAApC,EAAkFV,IAAlF,CAAuFC,OAAO,IAAEA,OAAhG,CAPK;AAQrBa,EAAAA,KAAK,EAAC,MAAIxB,QAAQ,CAACyB,GAAT,CAAa,WAAb,CARW;AASrBC,EAAAA,UAAU,EAAC,CAACrB,SAAD,EAAWC,QAAX,EAAoBC,KAApB,KAA4BP,QAAQ,CAACsB,KAAT,CAAe,eAAf,EAA+B;AAACjB,IAAAA,SAAD;AAAWC,IAAAA,QAAX;AAAoBC,IAAAA;AAApB,GAA/B;AATlB,CAAhB","sourcesContent":["import * as axios from 'axios'\n\nconst instanse = axios.create({\n  baseURL:'https://mock-api-nodejs.herokuapp.com'\n})\n\n\nexport const userApi = {\n  signup:(firstName,lastName,email,password)=>instanse.post('/users/signup',{firstName,lastName,email,password}).then(respose=>{\n    \n    instanse.defaults.headers.common = {'Authorization': `Bearer ${respose.data.data.user.accessToken}`}\n    return respose.data}),\n  login:(email,password)=>instanse.post('/users/login',{email, password}),\n  renewToken:(token)=>instanse.post('/users/renewAcessToken',{token}),\n  logout:(token)=>instanse.patch('/users/logout',null,{headers:{Authorization: `Bearer ${token}`}}).then(respose=>respose),\n  getMe:()=>instanse.get('/users/me'),\n  userUpdate:(firstName,lastName,email)=>instanse.patch('/users/update',{firstName,lastName,email})\n}\n\n\n"]},"metadata":{},"sourceType":"module"}