{"ast":null,"code":"import { takeEvery, put } from \"@redux-saga/core/effects\";\nimport { productApi } from \"../../../../API\";\n\nasync function getProds(token) {\n  return await productApi.getProducts(token);\n}\n\nfunction* workerSaga(_ref) {\n  let {\n    token\n  } = _ref;\n  const data = yield getProds(token);\n  arrProd = data.data.map(item => {\n    return {\n      name: item.name,\n      manufacturer\n    };\n  });\n\n  if (data.status === 200) {//yield put({type:'SET_PRODUCTS',data:{name:data.data,manufacture,calories,rating,description,category,amount}})\n  }\n}\n\nexport default function* getProductsSaga() {\n  yield takeEvery('GET_PRODUCTS', workerSaga);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/redux/sagas/products/getProducts/index.js"],"names":["takeEvery","put","productApi","getProds","token","getProducts","workerSaga","data","arrProd","map","item","name","manufacturer","status","getProductsSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,QAA8B,0BAA9B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAGA,eAAeC,QAAf,CAAwBC,KAAxB,EAA8B;AAC5B,SAAO,MAAMF,UAAU,CAACG,WAAX,CAAuBD,KAAvB,CAAb;AACD;;AAED,UAAUE,UAAV,OAA6B;AAAA,MAAR;AAACF,IAAAA;AAAD,GAAQ;AAC3B,QAAMG,IAAI,GAAG,MAAMJ,QAAQ,CAACC,KAAD,CAA3B;AACAI,EAAAA,OAAO,GAAGD,IAAI,CAACA,IAAL,CAAUE,GAAV,CAAcC,IAAI,IAAE;AAC5B,WAAM;AAACC,MAAAA,IAAI,EAACD,IAAI,CAACC,IAAX;AAAgBC,MAAAA;AAAhB,KAAN;AACD,GAFS,CAAV;;AAGA,MAAGL,IAAI,CAACM,MAAL,KAAgB,GAAnB,EAAuB,CACrB;AACD;AACF;;AAED,eAAe,UAAUC,eAAV,GAA2B;AACxC,QAAMd,SAAS,CAAC,cAAD,EAAgBM,UAAhB,CAAf;AACD","sourcesContent":["import { takeEvery ,put} from \"@redux-saga/core/effects\";\nimport { productApi } from \"../../../../API\";\n\n\nasync function getProds(token){\n  return await productApi.getProducts(token)\n}\n\nfunction* workerSaga({token}){\n  const data = yield getProds(token)\n  arrProd = data.data.map(item=>{\n    return{name:item.name,manufacturer}\n  })\n  if(data.status === 200){\n    //yield put({type:'SET_PRODUCTS',data:{name:data.data,manufacture,calories,rating,description,category,amount}})\n  }\n}\n\nexport default function* getProductsSaga(){\n  yield takeEvery('GET_PRODUCTS',workerSaga)\n}"]},"metadata":{},"sourceType":"module"}