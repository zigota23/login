{"ast":null,"code":"var _jsxFileName = \"/home/dev/Max/test/login/src/pages/login/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useStyles } from \"./style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userLogin } from \"../../store/actions/user\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyForm from \"../../components/form\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string().email(\"Wrong email\").required(\"Required field\"),\n  password: yup.string().min(8, \"Not long\").required(\"Required field\")\n});\nconst initialValuesForm = {};\n\nconst Login = props => {\n  _s();\n\n  const s = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.authReducer.token);\n  useEffect(() => {\n    dispatch(setDataUser({\n      token: JSON.parse(localStorage.getItem('token'))\n    }));\n  }, []);\n  useEffect(() => {\n    if (token === \"\") navigate(\"/login\");\n  }, [token]);\n\n  const onSubmit = (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n    const {\n      email,\n      password,\n      checkbox = false\n    } = values;\n    dispatch(userLogin({\n      email,\n      password,\n      checkbox,\n      navigate\n    }));\n    setSubmitting(false);\n  };\n\n  const formItem = [{\n    element: \"Input\",\n    propsItem: {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\"\n    }\n  }, {\n    element: \"Input\",\n    propsItem: {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      sx: {\n        marginTop: \"20px\"\n      }\n    }\n  }, {\n    element: \"Button\",\n    propsItem: {\n      type: \"submit\",\n      sx: {\n        marginTop: \"10px\"\n      }\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.loginForm,\n      children: /*#__PURE__*/_jsxDEV(MyForm, {\n        onSubmit: onSubmit,\n        initialValues: initialValuesForm,\n        formItem: formItem,\n        typeForm: \"signin\",\n        validationSchema: validationSchema\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"oVka6/goQpcdGwAXkI8jlCNcJbA=\", false, function () {\n  return [useStyles, useNavigate, useDispatch, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/dev/Max/test/login/src/pages/login/index.jsx"],"names":["React","useStyles","useDispatch","useSelector","userLogin","useNavigate","MyForm","yup","validationSchema","object","email","string","required","password","min","initialValuesForm","Login","props","s","navigate","dispatch","token","state","authReducer","useEffect","setDataUser","JSON","parse","localStorage","getItem","onSubmit","values","setSubmitting","checkbox","formItem","element","propsItem","type","name","placeholder","sx","marginTop","loginForm"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useStyles } from \"./style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userLogin } from \"../../store/actions/user\";\nimport { useNavigate } from \"react-router-dom\";\nimport MyForm from \"../../components/form\";\nimport * as yup from \"yup\";\n\nconst validationSchema = yup.object({\n  email: yup.string().email(\"Wrong email\").required(\"Required field\"),\n  password: yup.string().min(8, \"Not long\").required(\"Required field\"),\n});\n\nconst initialValuesForm = {};\n\nconst Login = (props) => {\n  const s = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const token = useSelector(state=>state.authReducer.token)\n\n  useEffect(() => {\n    dispatch(setDataUser({token:JSON.parse(localStorage.getItem('token'))}))\n  }, []);\n\n  useEffect(() => {\n    if (token === \"\") navigate(\"/login\");\n  }, [token]);\n\n  \n  const onSubmit = (values, { setSubmitting }) => {\n    const { email, password,checkbox=false } = values;\n    dispatch(userLogin({ email, password,checkbox, navigate }));\n    setSubmitting(false);\n  };\n\n  const formItem = [\n    {\n      element: \"Input\",\n      propsItem: {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n      },\n    },\n    {\n      element: \"Input\",\n      propsItem: {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        sx: { marginTop: \"20px\" },\n      },\n    },\n    {\n      element: \"Button\",\n      propsItem: {\n        type: \"submit\",\n        sx: { marginTop: \"10px\" },\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <div className={s.loginForm}>\n        <MyForm\n          onSubmit={onSubmit}\n          initialValues={initialValuesForm}\n          formItem={formItem}\n          typeForm=\"signin\"\n          validationSchema={validationSchema}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}