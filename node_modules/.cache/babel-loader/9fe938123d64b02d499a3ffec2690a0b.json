{"ast":null,"code":"import * as axios from 'axios';\nconst instanse = axios.create({\n  baseURL: 'https://mock-api-nodejs.herokuapp.com'\n});\nexport const userApi = {\n  singup: (firstName, lastName, email, password) => instanse.post('/users/singup', {\n    firstName,\n    lastName,\n    email,\n    password\n  }),\n  login: (email, password) => instanse.post('/users/login', {\n    email,\n    password\n  }),\n  renewToken: token => instanse.post('/users/renewAcessToken', {\n    token\n  }),\n  logout: () => instanse.patch('/users/logout'),\n  getMe: () => instanse.get('/users/me'),\n  userUpdate: (firstName, lastName, email) => instanse.patch('/users/update', {\n    firstName,\n    lastName,\n    email\n  })\n};","map":{"version":3,"sources":["/home/dev/Max/test/login/src/API/index.js"],"names":["axios","instanse","create","baseURL","userApi","singup","firstName","lastName","email","password","post","login","renewToken","token","logout","patch","getMe","get","userUpdate"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAC;AADoB,CAAb,CAAjB;AAKA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,MAAM,EAAC,CAACC,SAAD,EAAWC,QAAX,EAAoBC,KAApB,EAA0BC,QAA1B,KAAsCR,QAAQ,CAACS,IAAT,CAAc,eAAd,EAA8B;AAACJ,IAAAA,SAAD;AAAWC,IAAAA,QAAX;AAAoBC,IAAAA,KAApB;AAA0BC,IAAAA;AAA1B,GAA9B,CADxB;AAErBE,EAAAA,KAAK,EAAC,CAACH,KAAD,EAAOC,QAAP,KAAmBR,QAAQ,CAACS,IAAT,CAAc,cAAd,EAA6B;AAACF,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAA7B,CAFJ;AAGrBG,EAAAA,UAAU,EAAEC,KAAD,IAAUZ,QAAQ,CAACS,IAAT,CAAc,wBAAd,EAAuC;AAACG,IAAAA;AAAD,GAAvC,CAHA;AAIrBC,EAAAA,MAAM,EAAC,MAAKb,QAAQ,CAACc,KAAT,CAAe,eAAf,CAJS;AAKrBC,EAAAA,KAAK,EAAC,MAAKf,QAAQ,CAACgB,GAAT,CAAa,WAAb,CALU;AAMrBC,EAAAA,UAAU,EAAC,CAACZ,SAAD,EAAWC,QAAX,EAAoBC,KAApB,KAA4BP,QAAQ,CAACc,KAAT,CAAe,eAAf,EAA+B;AAACT,IAAAA,SAAD;AAAWC,IAAAA,QAAX;AAAoBC,IAAAA;AAApB,GAA/B;AANlB,CAAhB","sourcesContent":["import * as axios from 'axios'\n\nconst instanse = axios.create({\n  baseURL:'https://mock-api-nodejs.herokuapp.com'\n})\n\n\nexport const userApi = {\n  singup:(firstName,lastName,email,password)=>(instanse.post('/users/singup',{firstName,lastName,email,password})),\n  login:(email,password)=>(instanse.post('/users/login',{email, password})),\n  renewToken:(token)=>(instanse.post('/users/renewAcessToken',{token})),\n  logout:()=>(instanse.patch('/users/logout')),\n  getMe:()=>(instanse.get('/users/me')),\n  userUpdate:(firstName,lastName,email)=>instanse.patch('/users/update',{firstName,lastName,email})\n}"]},"metadata":{},"sourceType":"module"}