{"ast":null,"code":"var _jsxFileName = \"/home/dev/Max/test/login/src/section/form/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { validateEmail } from \"../../validate\";\nimport { Button, Typography } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport Input from './../../components/Input';\nimport { useStyles } from \"./style\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyForm = props => {\n  _s();\n\n  const s = useStyles();\n  const navigate = useNavigate();\n\n  const items = (values, errors, touched, handleChange, handleBlur, isSubmitting) => props.formItem.map((item, index) => {\n    switch (item.element) {\n      case 'Input':\n        {\n          const {\n            type,\n            name,\n            placeholder,\n            sx\n          } = item.propsItem;\n          return /*#__PURE__*/_jsxDEV(Input, {\n            type: type,\n            name: name,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values[name],\n            errors: errors[name],\n            touched: touched[name],\n            placeholder: placeholder,\n            sx: sx\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this);\n        }\n\n      default:\n        return null;\n    }\n  });\n\n  const textButton = () => {\n    switch (props.typeForm) {\n      case 'signin':\n        return 'Sign In';\n\n      case 'signup':\n        return 'Sign Up';\n\n      case 'changeProfile':\n        return 'Save';\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: props.initialValues,\n    validate: validateEmail,\n    onSubmit: props.onSubmit,\n    children: _ref => {\n      let {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [items(values, errors, touched, handleChange, handleBlur, isSubmitting), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.blockSubmit,\n          children: [props.typeForm == 'signup' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.staySing,\n            children: \"Stay singed in?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 41\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.blockButton,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: isSubmitting,\n              variant: \"contained\",\n              children: textButton()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.createProfile,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              navigate('/signup');\n            },\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyForm, \"WdIPXw8S3mIXYwYxSNY8dQJ+fVE=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = MyForm;\nexport default MyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"sources":["/home/dev/Max/test/login/src/section/form/index.jsx"],"names":["React","validateEmail","Button","Typography","Formik","Input","useStyles","useNavigate","MyForm","props","s","navigate","items","values","errors","touched","handleChange","handleBlur","isSubmitting","formItem","map","item","index","element","type","name","placeholder","sx","propsItem","textButton","typeForm","initialValues","onSubmit","handleSubmit","blockSubmit","staySing","blockButton","createProfile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { validateEmail } from \"../../validate\";\nimport {Button, Typography} from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport Input from './../../components/Input'\nimport { useStyles } from \"./style\";\nimport { useNavigate } from \"react-router\";\n\nconst MyForm = (props)=>{\n\n  const s = useStyles()\n  const navigate = useNavigate()\n\n  const items = (values,errors,touched,handleChange,handleBlur,isSubmitting)=>(props.formItem.map((item,index)=>{\n\n    switch(item.element){\n      case 'Input':{\n        const {type,name,placeholder,sx} = item.propsItem\n        return(\n          <Input\n              type={type}\n              name={name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values[name]}\n              errors={errors[name]}\n              touched={touched[name]}\n              placeholder={placeholder}\n              sx={sx}\n              key={index}\n           />\n        )\n      }\n\n      default: return null\n    }\n  }))\n\n  const textButton = ()=>{\n    switch(props.typeForm){\n      case 'signin': return 'Sign In'\n      case 'signup': return 'Sign Up'\n      case 'changeProfile': return 'Save'\n\n      default : return null\n    }\n  }\n\n  return (\n    <Formik\n          initialValues={props.initialValues}\n          validate={validateEmail}\n          onSubmit={props.onSubmit}\n        >\n        {({values,errors,touched,handleChange,handleBlur,handleSubmit,isSubmitting}) => (\n          <form \n          onSubmit={handleSubmit}\n          >\n            {items(values,errors,touched,handleChange,handleBlur,isSubmitting)}\n            <div className={s.blockSubmit}>\n              {props.typeForm=='signup'?<div className={s.staySing}>Stay singed in?</div>:null}\n              <div className={s.blockButton}>\n                <Button type='submit' disabled={isSubmitting} variant='contained'>\n                  {textButton()}\n                </Button>\n              </div>\n            </div>\n            <div className={s.createProfile}><Button onClick={()=>{navigate('/signup')}}>Create an account</Button></div>\n          </form>\n        )}\n        </Formik>\n\n  )\n}\n\nexport default MyForm"]},"metadata":{},"sourceType":"module"}