{"ast":null,"code":"var _jsxFileName = \"/home/dev/Max/test/login/src/components/form/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport Input from \"../Input\";\nimport { useStyles } from \"./style\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyForm = props => {\n  _s();\n\n  const s = useStyles();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: props.initialValues,\n    onSubmit: props.onSubmit,\n    validationSchema: props.validationSchema\n  });\n\n  const items = () => props.formItem.map((item, index) => {\n    if (item.element == 'Input') {\n      const {\n        type,\n        name,\n        placeholder,\n        sx\n      } = item.propsItem;\n      return /*#__PURE__*/_jsxDEV(Input, {\n        type: type,\n        name: name,\n        onChange: formik.handleChange,\n        value: formik.values ? formik.values[name] : '',\n        onBlur: formik.handleBlur,\n        errors: formik.errors[name],\n        touched: formik.touched[name],\n        placeholder: placeholder,\n        sx: sx\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this);\n    } else return null;\n  });\n\n  const btnText = {\n    signin: \"Sign In\",\n    signup: \"Sign Up\",\n    changeProfile: \"Save\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [items(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.blockSubmit,\n        children: [props.typeForm == \"signin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.staySing,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"checkbox\",\n            onChange: formik.handleChange,\n            value: formik.values ? formik.values.checkbox : '',\n            errors: formik.errors.checkbox,\n            touched: formik.touched.checkbox\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), \"Stay signed in?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.blockButton,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: formik.isSubmitting,\n            variant: \"contained\",\n            children: btnText[props.typeForm]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), props.typeForm == \"signin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.createProfile,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            navigate(\"/signup\");\n          },\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyForm, \"hOLQahotIZQ/QMblpK42GjDHQZs=\", false, function () {\n  return [useStyles, useNavigate, useFormik];\n});\n\n_c = MyForm;\nexport default MyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"sources":["/home/dev/Max/test/login/src/components/form/index.jsx"],"names":["React","Button","useFormik","Input","useStyles","useNavigate","MyForm","props","s","navigate","formik","initialValues","onSubmit","validationSchema","items","formItem","map","item","index","element","type","name","placeholder","sx","propsItem","handleChange","values","handleBlur","errors","touched","btnText","signin","signup","changeProfile","form","handleSubmit","blockSubmit","typeForm","staySing","checkbox","blockButton","isSubmitting","createProfile"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport Input from \"../Input\";\nimport { useStyles } from \"./style\";\nimport { useNavigate } from \"react-router\";\n\n\nconst MyForm = (props) => {\n  const s = useStyles();\n  const navigate = useNavigate();\n  const formik = useFormik({initialValues:props.initialValues,onSubmit:props.onSubmit,validationSchema:props.validationSchema})\n\n  const items = () =>\n    props.formItem.map((item, index) => {\n      if(item.element == 'Input'){\n          const { type, name, placeholder, sx } = item.propsItem;\n          return (\n            <Input\n              type={type}\n              name={name}\n              onChange={formik.handleChange}\n              value={formik.values?formik.values[name]:''}\n              onBlur={formik.handleBlur}\n              errors={formik.errors[name]}\n              touched={formik.touched[name]}\n              placeholder={placeholder}\n              sx={sx}\n              key={index}\n            />\n          );\n      }\n      else return null    \n    });\n\n  const btnText = {\n    signin: \"Sign In\",\n    signup: \"Sign Up\",\n    changeProfile: \"Save\"\n  };\n\n  return (\n    <div className={s.form}>\n      <div>Sign In</div>\n      <form onSubmit={formik.handleSubmit}>\n          {items()}\n          <div className={s.blockSubmit}>\n            {props.typeForm == \"signin\" &&\n              <div className={s.staySing}>\n                <input\n                  type=\"checkbox\"\n                  name=\"checkbox\"\n                  onChange={formik.handleChange}\n                  value={formik.values?formik.values.checkbox:''}\n                  errors={formik.errors.checkbox}\n                  touched={formik.touched.checkbox}\n                />\n                Stay signed in?\n              </div>\n            }\n            <div className={s.blockButton}>\n              <Button type=\"submit\" disabled={formik.isSubmitting} variant=\"contained\">\n                {btnText[props.typeForm]}\n              </Button>\n            </div>\n          </div>\n          {props.typeForm == \"signin\" &&\n            <div className={s.createProfile}>\n              <Button\n                onClick={() => {\n                  navigate(\"/signup\");\n                }}\n              >\n                Create an account\n              </Button>\n            </div>\n          }\n        </form>\n    </div>    \n   \n  );\n};\n\nexport default MyForm;\n"]},"metadata":{},"sourceType":"module"}