{"ast":null,"code":"import instanse from \"./index\";\nexport const userApi = {\n  signup: async payload => {\n    return await instanse.post(\"/users/signup\", { ...payload\n    });\n  },\n  login: payload => instanse.post(\"/users/login\", { ...payload\n  }),\n  renewToken: payload => instanse.post(\"/users/renewAcessToken\", { ...payload\n  }),\n  logout: () => instanse.patch(\"/users/logout\").then(respose => respose),\n  getMe: () => instanse.get(\"/users/me\"),\n  userUpdate: payload => instanse.patch(\"/users/update\", { ...payload\n  }).then(respose => respose),\n  userDelete: () => instanse.delete(\"/users/delete\").then(respose => respose)\n};","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/services/user.js"],"names":["instanse","userApi","signup","payload","post","login","renewToken","logout","patch","then","respose","getMe","get","userUpdate","userDelete","delete"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,SAArB;AAEA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,MAAM,EAAE,MAAOC,OAAP,IAAmB;AACzB,WAAO,MAAMH,QAAQ,CAACI,IAAT,CAAc,eAAd,EAA+B,EAAE,GAAGD;AAAL,KAA/B,CAAb;AACD,GAHoB;AAKrBE,EAAAA,KAAK,EAAGF,OAAD,IAAaH,QAAQ,CAACI,IAAT,CAAc,cAAd,EAA8B,EAAE,GAAGD;AAAL,GAA9B,CALC;AAOrBG,EAAAA,UAAU,EAAGH,OAAD,IACVH,QAAQ,CAACI,IAAT,CAAc,wBAAd,EAAwC,EAAE,GAAGD;AAAL,GAAxC,CARmB;AAUrBI,EAAAA,MAAM,EAAE,MAAMP,QAAQ,CAACQ,KAAT,CAAe,eAAf,EAAgCC,IAAhC,CAAsCC,OAAD,IAAaA,OAAlD,CAVO;AAYrBC,EAAAA,KAAK,EAAE,MAAMX,QAAQ,CAACY,GAAT,CAAa,WAAb,CAZQ;AAcrBC,EAAAA,UAAU,EAAGV,OAAD,IACVH,QAAQ,CAACQ,KAAT,CAAe,eAAf,EAAgC,EAAE,GAAGL;AAAL,GAAhC,EAAgDM,IAAhD,CAAsDC,OAAD,IAAaA,OAAlE,CAfmB;AAiBrBI,EAAAA,UAAU,EAAE,MAAMd,QAAQ,CAACe,MAAT,CAAgB,eAAhB,EAAiCN,IAAjC,CAAuCC,OAAD,IAAaA,OAAnD;AAjBG,CAAhB","sourcesContent":["import instanse from \"./index\";\n\nexport const userApi = {\n  signup: async (payload) => {\n    return await instanse.post(\"/users/signup\", { ...payload });\n  },\n\n  login: (payload) => instanse.post(\"/users/login\", { ...payload }),\n\n  renewToken: (payload) =>\n    instanse.post(\"/users/renewAcessToken\", { ...payload }),\n\n  logout: () => instanse.patch(\"/users/logout\").then((respose) => respose),\n\n  getMe: () => instanse.get(\"/users/me\"),\n\n  userUpdate: (payload) =>\n    instanse.patch(\"/users/update\", { ...payload }).then((respose) => respose),\n\n  userDelete: () => instanse.delete(\"/users/delete\").then((respose) => respose),\n};\n"]},"metadata":{},"sourceType":"module"}