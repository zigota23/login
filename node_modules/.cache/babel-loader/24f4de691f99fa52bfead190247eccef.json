{"ast":null,"code":"import { spawn, call, all } from \"@redux-saga/core/effects\";\nimport signUpSaga from \"./signup\";\nimport loginSaga from './login';\nimport renewToken from './renewToken';\nimport logoutSaga from \"./logout\";\nimport getUserSaga from \"./getme\";\nexport default function* rootSaga() {\n  const sagas = [signUpSaga, loginSaga, renewToken, logoutSaga, getUserSaga];\n  const retrySagas = yield sagas.map(saga => {\n    return spawn(function* () {\n      while (true) {\n        try {\n          yield call(saga);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    });\n  });\n  yield all(retrySagas);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/redux/sagas/index.js"],"names":["spawn","call","all","signUpSaga","loginSaga","renewToken","logoutSaga","getUserSaga","rootSaga","sagas","retrySagas","map","saga","e","console","log"],"mappings":"AAAA,SAASA,KAAT,EAAeC,IAAf,EAAoBC,GAApB,QAA+B,0BAA/B;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAOC,WAAP,MAAwB,SAAxB;AAGA,eAAe,UAAUC,QAAV,GAAqB;AAElC,QAAMC,KAAK,GAAG,CAACN,UAAD,EAAYC,SAAZ,EAAsBC,UAAtB,EAAiCC,UAAjC,EAA4CC,WAA5C,CAAd;AAGA,QAAMG,UAAU,GAAG,MAAMD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAE;AACvC,WAAOZ,KAAK,CAAC,aAAY;AACvB,aAAM,IAAN,EAAW;AACT,YAAG;AACD,gBAAMC,IAAI,CAACW,IAAD,CAAV;AACD,SAFD,CAGA,OAAMC,CAAN,EAAQ;AACNC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;AACF,KATW,CAAZ;AAUD,GAXwB,CAAzB;AAaA,QAAMX,GAAG,CAACQ,UAAD,CAAT;AACD","sourcesContent":["import { spawn,call,all } from \"@redux-saga/core/effects\"\nimport signUpSaga from \"./signup\"\nimport loginSaga from './login'\nimport renewToken from './renewToken'\nimport logoutSaga from \"./logout\"\nimport getUserSaga from \"./getme\"\n\n\nexport default function* rootSaga (){\n\n  const sagas = [signUpSaga,loginSaga,renewToken,logoutSaga,getUserSaga,]\n  \n\n  const retrySagas = yield sagas.map(saga=>{\n    return spawn(function* (){\n      while(true){\n        try{\n          yield call(saga)\n        }\n        catch(e){\n          console.log(e)\n        }\n      }\n    })\n  })\n  \n  yield all(retrySagas)\n}"]},"metadata":{},"sourceType":"module"}