{"ast":null,"code":"var _jsxFileName = \"/home/dev/Max/test/login/src/pages/login/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { FormControl, InputLabel, Button, Input } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Header from \"../../section/header\";\nimport { useStyles } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  let [data, setData] = useState({\n    email: '',\n    password: ''\n  });\n  const s = useStyles();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.login,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: (values, _ref) => {\n          let {\n            setSubmitting\n          } = _ref;\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        children: _ref2 => {\n          let {\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 12\n            }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 12\n            }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 10\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"LMemNkcSCquNYN8qEGca1sWc0Jg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/dev/Max/test/login/src/pages/login/index.jsx"],"names":["FormControl","InputLabel","Button","Input","React","useState","Header","useStyles","Login","props","data","setData","email","password","s","submitHandler","e","preventDefault","console","log","login","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import { FormControl, InputLabel,Button, Input } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Header from \"../../section/header\";\nimport { useStyles } from \"./style\";\n\n\n\nconst Login = (props)=>{\n\n  let [data,setData]=useState({email:'',password:''})\n\n  const s = useStyles()\n\n  const submitHandler = e =>{\n\n    e.preventDefault()\n    console.log(data)\n  }\n\n  return(\n    <div>\n      <Header/>\n      <div className={s.login}>\n      <Formik\n       initialValues={{ email: '', password: '' }}\n       validate={values => {\n         const errors = {};\n         if (!values.email) {\n           errors.email = 'Required';\n         } else if (\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n         ) {\n           errors.email = 'Invalid email address';\n         }\n         return errors;\n       }}\n       onSubmit={(values, { setSubmitting }) => {\n         setTimeout(() => {\n           alert(JSON.stringify(values, null, 2));\n           setSubmitting(false);\n         }, 400);\n       }}\n     >\n       {({\n         values,\n         errors,\n         touched,\n         handleChange,\n         handleBlur,\n         handleSubmit,\n         isSubmitting,\n       }) => (\n         <form onSubmit={handleSubmit}>\n           <input\n             type=\"email\"\n             name=\"email\"\n             onChange={handleChange}\n             onBlur={handleBlur}\n             value={values.email}\n           />\n           {errors.email && touched.email && errors.email}\n           <input\n             type=\"password\"\n             name=\"password\"\n             onChange={handleChange}\n             onBlur={handleBlur}\n             value={values.password}\n           />\n           {errors.password && touched.password && errors.password}\n           <button type=\"submit\" disabled={isSubmitting}>\n             Submit\n           </button>\n         </form>\n       )}\n     </Formik>\n      </div>\n    </div>\n  )\n}\n\nexport default Login  \n\n"]},"metadata":{},"sourceType":"module"}