{"ast":null,"code":"import { put, takeEvery } from \"@redux-saga/core/effects\";\nimport { productApi } from \"../../../../API\";\n\nasync function createProd(name, manufacturer, calories, rating, description, category, amount, token) {\n  return await productApi.createProduct(name, manufacturer, calories, rating, description, category, amount, token);\n}\n\nfunction* workerSaga(_ref) {\n  let {\n    name,\n    manufacturer,\n    calories,\n    rating,\n    description,\n    category,\n    amount,\n    token\n  } = _ref;\n  const data = yield createProd(name, manufacturer, calories, rating, description, category, amount, token);\n}\n\nexport default function* createProductSaga() {\n  yield takeEvery('CREATE_PRODUCT', workerSaga);\n}","map":{"version":3,"sources":["/home/dev/Max/test/login/src/store/sagas/products/createProduct/index.js"],"names":["put","takeEvery","productApi","createProd","name","manufacturer","calories","rating","description","category","amount","token","createProduct","workerSaga","data","createProductSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,0BAA/B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,eAAeC,UAAf,CAA0BC,IAA1B,EAA+BC,YAA/B,EAA4CC,QAA5C,EAAqDC,MAArD,EAA4DC,WAA5D,EAAwEC,QAAxE,EAAiFC,MAAjF,EAAwFC,KAAxF,EAA8F;AAC5F,SAAO,MAAMT,UAAU,CAACU,aAAX,CAAyBR,IAAzB,EAA8BC,YAA9B,EAA2CC,QAA3C,EAAoDC,MAApD,EAA2DC,WAA3D,EAAuEC,QAAvE,EAAgFC,MAAhF,EAAuFC,KAAvF,CAAb;AACD;;AAED,UAAUE,UAAV,OAA2F;AAAA,MAAtE;AAACT,IAAAA,IAAD;AAAMC,IAAAA,YAAN;AAAmBC,IAAAA,QAAnB;AAA4BC,IAAAA,MAA5B;AAAmCC,IAAAA,WAAnC;AAA+CC,IAAAA,QAA/C;AAAwDC,IAAAA,MAAxD;AAA+DC,IAAAA;AAA/D,GAAsE;AACzF,QAAMG,IAAI,GAAG,MAAMX,UAAU,CAACC,IAAD,EAAMC,YAAN,EAAmBC,QAAnB,EAA4BC,MAA5B,EAAmCC,WAAnC,EAA+CC,QAA/C,EAAwDC,MAAxD,EAA+DC,KAA/D,CAA7B;AACD;;AAED,eAAe,UAAUI,iBAAV,GAA6B;AAC1C,QAAOd,SAAS,CAAC,gBAAD,EAAkBY,UAAlB,CAAhB;AACD","sourcesContent":["import { put, takeEvery } from \"@redux-saga/core/effects\";\nimport { productApi } from \"../../../../API\";\n\nasync function createProd(name,manufacturer,calories,rating,description,category,amount,token){\n  return await productApi.createProduct(name,manufacturer,calories,rating,description,category,amount,token)\n}\n\nfunction* workerSaga({name,manufacturer,calories,rating,description,category,amount,token}){\n  const data = yield createProd(name,manufacturer,calories,rating,description,category,amount,token)\n}\n\nexport default function* createProductSaga(){\n  yield  takeEvery('CREATE_PRODUCT',workerSaga)\n}"]},"metadata":{},"sourceType":"module"}